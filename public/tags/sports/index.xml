<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sports on Michael Lee</title>
    <link>/tags/sports/index.xml</link>
    <description>Recent content in Sports on Michael Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>mdlee12@gmail.com (Michael Lee)</managingEditor>
    <webMaster>mdlee12@gmail.com (Michael Lee)</webMaster>
    <atom:link href="/tags/sports/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Dominance of Jonathan Taylor: Wisconsin Rushers in Context</title>
      <link>/posts/2019-01-28-wisconsin-rushing-history/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>mdlee12@gmail.com (Michael Lee)</author>
      <guid>/posts/2019-01-28-wisconsin-rushing-history/</guid>
      <description>&lt;div id=&#34;hot-take-alert&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hot Take Alert&lt;/h2&gt;
&lt;p&gt;ðŸ”¥ Jonathan Taylor is on pace to be the greatest running back in Wisconsin football history ðŸ”¥&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Over the previous three decades Wisconsin has retained several elite rushers (and offensive lines) to amass several conference championships and Rose Bowl appearances. Even when acknowledging Taylorâ€™s case as a serious Heisman candidate in each of his first two years, proclaiming him the presumptive best running back in Wisconsin football history still feels like a bold proclamation. Letâ€™s investigate!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;accessing-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Accessing the data&lt;/h2&gt;
&lt;p&gt;The first step in comparing Taylor to previous Wisconsin rushers is retrieving historical college football statistics. Single-game box scores are only available on &lt;a href=&#34;https://www.sports-reference.com/cfb/&#34;&gt;Sports-Reference&lt;/a&gt; starting in 2000 (compare the game hyperlinks for the &lt;a href=&#34;https://www.sports-reference.com/cfb/schools/wisconsin/1999-schedule.html&#34;&gt;1999&lt;/a&gt; and &lt;a href=&#34;https://www.sports-reference.com/cfb/schools/wisconsin/2000-schedule.html&#34;&gt;2000&lt;/a&gt; Wisconsin schedules), therefore, two scripts were used to aggregate player data:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The first accesses single season statistics from 1956-2018, detailed here &lt;strong&gt;(NOTE: click on the gray bars to display the code!)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt;Scraper for Yearly Rushing Data, 1956 - 2018&lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(rvest)
library(ggplot2)
library(lubridate)
library(shadowtext)
library(RColorBrewer)
library(ggrepel)
library(forcats)

url &amp;lt;- &amp;quot;https://www.sports-reference.com/cfb/schools/wisconsin/&amp;quot;

rushingTable &amp;lt;- &amp;#39;#rushing_and_receiving&amp;#39;
playerIDTable &amp;lt;- paste0(rushingTable,&amp;#39; a&amp;#39;)
rushingData &amp;lt;- data.frame()

# for loop by season
for (season in 1956:1999) {
  html &amp;lt;- paste0(url,season,&amp;quot;.html&amp;quot;)

  # batting stats
  html %&amp;gt;%
    read_html %&amp;gt;%
    html_nodes(xpath = &amp;#39;//comment()&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    paste(collapse=&amp;#39;&amp;#39;) %&amp;gt;%
    read_html() %&amp;gt;%
    html_node(rushingTable) %&amp;gt;%
    html_table(header = TRUE) -&amp;gt; df

  # player info
  html %&amp;gt;%
    read_html %&amp;gt;%
    html_nodes(xpath = &amp;#39;//comment()&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    paste(collapse=&amp;#39;&amp;#39;) %&amp;gt;%
    read_html() %&amp;gt;%
    html_nodes(playerIDTable) %&amp;gt;%
    html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; playerIDhtml

  # clean dataframe and add team and season info
  colnames(df) &amp;lt;- df[1,]
  df &amp;lt;- df[-1, ] 
  df$season &amp;lt;- c(season)

  # remove url data
  playerIDhtml=gsub(&amp;quot;/cfb/players/&amp;quot;, &amp;quot;&amp;quot;, playerIDhtml,fixed = TRUE)
  playerID=gsub(&amp;quot;.html&amp;quot;, &amp;quot;&amp;quot;, playerIDhtml,fixed = TRUE)

  df$playerID &amp;lt;- c(playerID)

  # bind to 
  rushingData &amp;lt;- rbind(rushingData,df)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The second accesses single game statistics from 2000-2018.&lt;/li&gt;
&lt;/ol&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt;Scraper for Single Game Rushing Data, 2000 - 2018&lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;urlFirst &amp;lt;- &amp;quot;https://www.sports-reference.com/cfb/schools/wisconsin/&amp;quot;

urlSecond &amp;lt;- &amp;quot;https://www.sports-reference.com&amp;quot;

offenseYear &amp;lt;- &amp;quot;#offense&amp;quot;
gameDate &amp;lt;- paste0(offenseYear,&amp;#39; a&amp;#39;)

urls &amp;lt;- c()

for (season in 2000:2018) {
  html &amp;lt;- paste0(urlFirst,season,&amp;quot;/gamelog/&amp;quot;)

  # player info
  html %&amp;gt;%
    read_html() %&amp;gt;%
    html_nodes(gameDate) %&amp;gt;%
    html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; playerIDhtml

  playerIDhtml &amp;lt;- grep(&amp;quot;boxscores&amp;quot;,x = playerIDhtml,value = TRUE)
  
  html2 &amp;lt;- paste0(urlSecond,playerIDhtml)

  # bind to 
  urls &amp;lt;- c(urls,html2)
}


rushingDataGames &amp;lt;- data.frame()


# for loop by season
for (links in urls) {

  # batting stats
  links %&amp;gt;%
    read_html %&amp;gt;%
    html_nodes(xpath = &amp;#39;//comment()&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    paste(collapse=&amp;#39;&amp;#39;) %&amp;gt;%
    read_html() %&amp;gt;%
    html_node(rushingTable) %&amp;gt;%
    html_table(header = TRUE) -&amp;gt; df


  # clean dataframe and add team and season info
  colnames(df) &amp;lt;- paste0(colnames(df), df[1,])
  df &amp;lt;- df[-1, ] 
  df &amp;lt;- df %&amp;gt;% filter(!School %in% c(&amp;quot;School&amp;quot;, NA, &amp;quot;&amp;quot;))
  df$gameDate &amp;lt;- gsub(pattern = paste(c(&amp;quot;https://www.sports-reference.com/cfb/boxscores/&amp;quot;), collapse = &amp;quot;|&amp;quot;),replacement =  &amp;quot;&amp;quot;, x = links)
  df$gameDate &amp;lt;- substr(df$gameDate ,1,10)

  # player info
  links %&amp;gt;%
    read_html %&amp;gt;%
    html_nodes(xpath = &amp;#39;//comment()&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    paste(collapse=&amp;#39;&amp;#39;) %&amp;gt;%
    read_html() %&amp;gt;%
    html_nodes(playerIDTable) %&amp;gt;%
    html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; playerIDhtml

  playerIDhtml &amp;lt;- grep(&amp;quot;players&amp;quot;,x = playerIDhtml,value = TRUE)

  # remove url data
  playerIDhtml=gsub(&amp;quot;/cfb/players/&amp;quot;, &amp;quot;&amp;quot;, playerIDhtml,fixed = TRUE)
  playerID=gsub(&amp;quot;.html&amp;quot;, &amp;quot;&amp;quot;, playerIDhtml,fixed = TRUE)

  if(links == &amp;quot;https://www.sports-reference.com/cfb/boxscores/2013-09-28-ohio-state.html&amp;quot;) {
    playerID &amp;lt;- c(playerID[1:11], &amp;quot;corey-brown-2&amp;quot;, playerID[12:14])
  }

  if(links == &amp;quot;https://www.sports-reference.com/cfb/boxscores/2013-11-23-minnesota.html&amp;quot;) {
    playerID &amp;lt;- c(playerID[1:11], &amp;quot;donovahn-jones-1&amp;quot;, playerID[12:15])
  }
 

  df$playerID &amp;lt;- c(playerID)

  # bind to 
  rushingDataGames &amp;lt;- rbind(rushingDataGames,df)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;
&lt;p&gt;Instead of re-running the scrapers, the full data as an &lt;strong&gt;.Rdata&lt;/strong&gt; file can be accessed through these two links: &lt;a href=&#34;https://mikelee.co/data/gameRushingData.rdata&#34;&gt;Single Game Rushing Data, 2000 - 2018&lt;/a&gt; and &lt;a href=&#34;https://mikelee.co/data/yearRushingData.rdata&#34;&gt;Yearly Rushing Data, 1968 - 2018&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Analysis&lt;/h1&gt;
&lt;p&gt;In order to generate visualizations weâ€™ll first need to complete some slight reshaping and data cleanup. Since the box scores donâ€™t contain much supplementary information, weâ€™ll instead construct a few dplyr &lt;code&gt;filter&lt;/code&gt; conditions to create our data set of best rushers in Wisconsin history.&lt;/p&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt;Data Reshaping and Cleanup&lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rushingDataGames &amp;lt;- readRDS(&amp;quot;/home/michael/Documents/mikeleeco.github.com/static/data/gameRushingData.rdata&amp;quot;)

rushingData &amp;lt;- readRDS(&amp;quot;/home/michael/Documents/mikeleeco.github.com/static/data/yearRushingData.rdata&amp;quot;)

rushingDataGames$gameDate &amp;lt;- ymd(rushingDataGames$gameDate)

rushingDataGames &amp;lt;- rushingDataGames %&amp;gt;% filter(School == &amp;quot;Wisconsin&amp;quot;)

rushingDataGames$gameNo &amp;lt;- 1

rushingDataGames$RushingYds &amp;lt;- ifelse(is.na(rushingDataGames$RushingYds) | rushingDataGames$RushingYds == &amp;quot;&amp;quot;, 0, rushingDataGames$RushingYds)
rushingDataGames$RushingAtt &amp;lt;- ifelse(is.na(rushingDataGames$RushingAtt) | rushingDataGames$RushingAtt == &amp;quot;&amp;quot;, 0, rushingDataGames$RushingAtt)

dat &amp;lt;- rushingDataGames %&amp;gt;%
    arrange(playerID, gameDate) %&amp;gt;%
    group_by(playerID) %&amp;gt;%
    mutate(gameNo = cumsum(gameNo),roll_sum_att = cumsum(RushingAtt),roll_sum_yards = cumsum(RushingYds))


dat &amp;lt;- dat %&amp;gt;%
    arrange(playerID, gameDate) %&amp;gt;%
    group_by(playerID) %&amp;gt;%
    mutate()

x &amp;lt;- dat %&amp;gt;% group_by(playerID) %&amp;gt;% filter(gameDate == max(gameDate, na.rm = TRUE))

xx &amp;lt;- x %&amp;gt;% filter(!is.na(roll_sum_yards) &amp;amp; roll_sum_yards &amp;gt; 0)

dat$gameDate &amp;lt;- ymd(dat$gameDate)

xScale &amp;lt;- as.Date(as.character(c(2000:2019)),&amp;quot;%Y&amp;quot;)

dat &amp;lt;- dat %&amp;gt;% group_by(playerID) %&amp;gt;% filter(max(as.numeric(gameNo), na.rm = TRUE) &amp;gt; 10 &amp;amp; max(as.numeric(roll_sum_yards), na.rm = TRUE) &amp;gt; 0 &amp;amp; max(year(gameDate), na.rm = TRUE) &amp;gt; 2000)


rushingData$Rk &amp;lt;- NULL
rushingData$School &amp;lt;- &amp;quot;Wisconsin&amp;quot;
rushingData$gameNo &amp;lt;- NA
rushingData$roll_sum_yards &amp;lt;- NA
rushingData$gameDate &amp;lt;- rushingData$season

colnames(rushingData) &amp;lt;- c(&amp;quot;Player&amp;quot;,  &amp;quot;RushingAtt&amp;quot;, &amp;quot;RushingYds&amp;quot;, &amp;quot;RushingAvg&amp;quot;, 
&amp;quot;RushingTD&amp;quot;, &amp;quot;ReceivingRec&amp;quot;, &amp;quot;ReceivingYds&amp;quot;, &amp;quot;ReceivingAvg&amp;quot;, 
&amp;quot;ReceivingTD&amp;quot;, &amp;quot;ScrimmagePlays&amp;quot;, &amp;quot;ScrimmageYds&amp;quot;, &amp;quot;ScrimmageAvg&amp;quot;, 
&amp;quot;ScrimmageTD&amp;quot;, &amp;quot;gameDate&amp;quot;, &amp;quot;playerID&amp;quot;,&amp;quot;School&amp;quot;, &amp;quot;gameNo&amp;quot;, &amp;quot;roll_sum&amp;quot;, 
&amp;quot;season&amp;quot;)


rushingData$RushingYds &amp;lt;- ifelse(is.na(rushingData$RushingYds) | rushingData$RushingYds == &amp;quot;&amp;quot;, 0, rushingData$RushingYds)
rushingData$RushingAtt &amp;lt;- ifelse(is.na(rushingData$RushingAtt) | rushingData$RushingAtt == &amp;quot;&amp;quot;, 0, rushingData$RushingAtt)



rushingData2 &amp;lt;- rushingData %&amp;gt;% group_by(playerID, Player, season) %&amp;gt;% summarise(RushingAtt = sum(as.numeric(RushingAtt),na.rm = TRUE), RushingYds = sum(as.numeric(RushingYds),na.rm = TRUE)) %&amp;gt;% filter(max(as.numeric(RushingYds), na.rm = TRUE) &amp;gt; 1000)


z2 &amp;lt;- rushingData2 %&amp;gt;%
    arrange(playerID) %&amp;gt;%
    group_by(playerID) %&amp;gt;%
    mutate(gameNo = cumsum(season),roll_sum_att = cumsum(RushingAtt),roll_sum_yards = cumsum(RushingYds))


z3 &amp;lt;- z2[!duplicated(z2$playerID), ]
z3$season &amp;lt;- z3$season - 1
z3$gameNo &amp;lt;- z3$season
z3$RushingYds &amp;lt;- 0
z3$roll_sum_yards &amp;lt;- 0

z2 &amp;lt;- bind_rows(z2, z3)

z2 &amp;lt;- z2 %&amp;gt;%
    arrange(playerID, season, RushingYds) 

z2 &amp;lt;- z2 %&amp;gt;% group_by(playerID, season) %&amp;gt;% add_tally() %&amp;gt;% ungroup()%&amp;gt;% group_by(playerID) %&amp;gt;% mutate(seasonNo = cumsum(n))

leadingRushersGame &amp;lt;- c(&amp;quot;montee-ball-1&amp;quot;, &amp;quot;melvin-gordon-1&amp;quot;, &amp;quot;anthony-davis-3&amp;quot;, &amp;quot;james-white-2&amp;quot;,
                        &amp;quot;jonathan-taylor-1&amp;quot;, &amp;quot;pj-hill-1&amp;quot;, &amp;quot;john-clay-1&amp;quot;, &amp;quot;corey-clement-1&amp;quot;, &amp;quot;brian-calhoun-1&amp;quot;)

leadingRushersSeason &amp;lt;- c(&amp;quot;anthony-davis-3&amp;quot;, &amp;quot;billy-marek-1&amp;quot;, &amp;quot;brent-moss-1&amp;quot;, &amp;quot;brian-calhoun-1&amp;quot;, 
                          &amp;quot;carl-mccullough-2&amp;quot;, &amp;quot;corey-clement-1&amp;quot;, &amp;quot;james-white-2&amp;quot;, &amp;quot;john-clay-1&amp;quot;, 
                          &amp;quot;jonathan-taylor-1&amp;quot;, &amp;quot;larry-emery-1&amp;quot;, &amp;quot;melvin-gordon-1&amp;quot;, &amp;quot;michael-bennett-1&amp;quot;, 
                          &amp;quot;montee-ball-1&amp;quot;, &amp;quot;pj-hill-1&amp;quot;, &amp;quot;ron-dayne-1&amp;quot;, &amp;quot;rufus-ferguson-1&amp;quot;, 
                          &amp;quot;terrell-fletcher-1&amp;quot;)


labelDat &amp;lt;- subset(z2, playerID %in% z2$playerID &amp;amp; playerID %in% leadingRushersSeason) %&amp;gt;% group_by(Player) %&amp;gt;% slice(which.max(roll_sum_yards))
labelDat$roll_sum_yards &amp;lt;- ifelse(labelDat$playerID == &amp;quot;terrell-fletcher-1&amp;quot;, labelDat$roll_sum_yards - 60,
            ifelse(labelDat$playerID == &amp;quot;brent-moss-1&amp;quot;, labelDat$roll_sum_yards + 60,labelDat$roll_sum_yards))

z4 &amp;lt;- z2 %&amp;gt;% group_by(playerID) %&amp;gt;%  top_n(2, RushingYds) %&amp;gt;% mutate(seasonNo = cumsum(n),roll_sum_att = cumsum(RushingAtt),roll_sum_yards = cumsum(RushingYds), meanydsperattempt = roll_sum_yards/roll_sum_att)


z3 &amp;lt;- z4[!duplicated(z4$playerID), ]
z3$seasonNo &amp;lt;- z3$seasonNo - 1
z3$gameNo &amp;lt;- z3$seasonNo
z3$RushingYds &amp;lt;- 0
z3$roll_sum_yards &amp;lt;- 0
z3$roll_sum_att &amp;lt;- 0
z4 &amp;lt;- bind_rows(z4, z3)

z5 &amp;lt;- z4 %&amp;gt;%
    arrange(playerID, season, RushingYds) %&amp;gt;%
    filter(playerID != &amp;quot;brian-calhoun-1&amp;quot; &amp;amp; seasonNo == 2)

z5$Player &amp;lt;- gsub(&amp;quot; &amp;quot;, &amp;quot;\n&amp;quot;, z5$Player)

z5$playerOrder &amp;lt;- fct_reorder(z5$Player,z5$roll_sum_yards)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt;ggplot2 Theme&lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;themeWisconsin &amp;lt;- function () { 
    theme_bw(base_size=13, base_family=&amp;quot;Open Sans&amp;quot;) %+replace% 
        theme(
            axis.line = element_line(colour = &amp;quot;#f4f4f4&amp;quot;, size = 1.2),
            panel.border = element_blank(),
            panel.background = element_blank(),
            panel.grid.minor = element_blank(),
            panel.grid.major = element_blank(),
            plot.title =  element_text(size = 20, hjust = 0, margin = unit(c(5, 5, 5, 5), &amp;quot;mm&amp;quot;)),
            axis.title.x = element_text(size = 15, hjust = .5, margin = unit(c(5, 5, 5, 5), &amp;quot;mm&amp;quot;)),
            axis.title.y =  element_text(size = 15, hjust = .5, angle = 90, margin = unit(c(5, 5, 5, 5), &amp;quot;mm&amp;quot;)),
            plot.background = element_rect(fill=&amp;quot;white&amp;quot;, colour=NA), 
            legend.background = element_rect(fill=&amp;quot;transparent&amp;quot;, colour=NA),
            legend.key = element_rect(fill=&amp;quot;transparent&amp;quot;, colour=NA),
            axis.ticks = element_blank()
        )
}
cols &amp;lt;- c(&amp;quot;#a6cee3&amp;quot;,&amp;quot;#1f78b4&amp;quot;,&amp;quot;#b2df8a&amp;quot;,&amp;quot;#33a02c&amp;quot;,&amp;quot;#fb9a99&amp;quot;,&amp;quot;#e31a1c&amp;quot;,&amp;quot;#ff7f00&amp;quot;,&amp;quot;#cab2d6&amp;quot;,&amp;quot;#6a3d9a&amp;quot;,&amp;quot;#b15928&amp;quot;)
getPallette = colorRampPalette(cols)

leftAlignPlot &amp;lt;- function (plot) { 

  g &amp;lt;- ggplotGrob(plot)

  g$layout$l[g$layout$name == &amp;quot;title&amp;quot;] &amp;lt;- 4
  g$layout$clip[g$layout$name==&amp;quot;panel&amp;quot;] &amp;lt;- &amp;quot;off&amp;quot;
  g$layout$z[g$layout$name==&amp;quot;panel&amp;quot;] = 17
  grid::grid.draw(g)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt;Comparing Wisconsin Running Back Rushing Production by Game, 2000 - 2018&lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;figure2 &amp;lt;- ggplot() +
    geom_point(data = subset(dat, playerID %in% xx$playerID), aes(gameDate, roll_sum_yards, group = playerID), color = &amp;quot;lightgrey&amp;quot;, alpha = .7) +
    geom_point(data = subset(dat, playerID %in% xx$playerID &amp;amp; playerID %in% leadingRushersGame), aes(gameDate, roll_sum_yards, group = playerID), color = &amp;quot;#c5050c&amp;quot;, alpha = 1) +
    geom_line(data = subset(dat, playerID %in% xx$playerID), aes(gameDate, roll_sum_yards, group = playerID), color = &amp;quot;lightgrey&amp;quot;, alpha = .7) +
    geom_line(data = subset(dat, playerID %in% xx$playerID &amp;amp; playerID %in% leadingRushersGame), aes(gameDate, roll_sum_yards, group = playerID), color = &amp;quot;#c5050c&amp;quot;, alpha = 1) +
    geom_shadowtext(data = subset(dat, playerID %in% xx$playerID &amp;amp; playerID %in% leadingRushersGame) %&amp;gt;% group_by(Player)%&amp;gt;% slice(which.max(roll_sum_yards)),
      aes(gameDate, roll_sum_yards, label = paste0(&amp;quot;  &amp;quot;,Player)), color = &amp;quot;black&amp;quot;, bg.colour=&amp;#39;white&amp;#39;, size = 6, hjust = 0, family = &amp;quot;Open Sans&amp;quot;, fontface = &amp;quot;bold&amp;quot;) + themeWisconsin() +
    guides(color=FALSE)  + scale_x_date(limits = ymd(c(&amp;quot;2000-04-20&amp;quot;,&amp;quot;2022-10-31&amp;quot;)),
      labels=year(ymd(c(&amp;quot;2000-8-20&amp;quot;,&amp;quot;2002-8-20&amp;quot;,&amp;quot;2004-8-20&amp;quot;,&amp;quot;2006-8-20&amp;quot;,&amp;quot;2008-8-20&amp;quot;,&amp;quot;2010-8-20&amp;quot;,&amp;quot;2012-8-20&amp;quot;,&amp;quot;2014-8-20&amp;quot;,&amp;quot;2016-8-20&amp;quot;,&amp;quot;2018-8-20&amp;quot;))),
      breaks=ymd(c(&amp;quot;2000-8-20&amp;quot;,&amp;quot;2002-8-20&amp;quot;,&amp;quot;2004-8-20&amp;quot;,&amp;quot;2006-8-20&amp;quot;,&amp;quot;2008-8-20&amp;quot;,&amp;quot;2010-8-20&amp;quot;,&amp;quot;2012-8-20&amp;quot;,&amp;quot;2014-8-20&amp;quot;,&amp;quot;2016-8-20&amp;quot;,&amp;quot;2018-8-20&amp;quot;)), expand = c(0, 0)) +
      scale_y_continuous(expand = c(0, 0), limits = c(-40, 5500)) + 
      labs(title = &amp;quot;Figure 2: Cumulative Rushing Yards by Game for Notable Wisconsin Running Backs, 2000 - 2018&amp;quot;, y = &amp;quot;Rushing Yards&amp;quot;,  x = &amp;quot;Date&amp;quot;)

figure3 &amp;lt;- ggplot() +
    geom_point(data = subset(dat, playerID %in% xx$playerID), aes(gameNo, roll_sum_yards, group = playerID), color = &amp;quot;lightgrey&amp;quot;, alpha = .7) +
    geom_point(data = subset(dat, playerID %in% xx$playerID &amp;amp; playerID %in% leadingRushersGame), aes(gameNo, roll_sum_yards, group = playerID, color = playerID), alpha = 1) +
    geom_line(data = subset(dat, playerID %in% xx$playerID), aes(gameNo, roll_sum_yards, group = playerID), color = &amp;quot;lightgrey&amp;quot;, alpha = .7) +
    geom_line(data = subset(dat, playerID %in% xx$playerID &amp;amp; playerID %in% leadingRushersGame), aes(gameNo, roll_sum_yards, group = playerID, color = playerID), alpha = 1) +
    geom_shadowtext(data = subset(dat, playerID %in% xx$playerID &amp;amp; playerID %in% leadingRushersGame) %&amp;gt;% group_by(Player)%&amp;gt;% slice(which.max(roll_sum_yards)),
                    aes(gameNo, roll_sum_yards, label = paste0(&amp;quot;  &amp;quot;,Player), color = playerID), bg.colour=&amp;#39;white&amp;#39;, size = 6, hjust = 0, family = &amp;quot;Open Sans&amp;quot;) +
    guides(color=FALSE)  + scale_x_continuous(limits = c(0,60),expand = c(0, 0)) +
    scale_y_continuous(expand = c(0, 0), limits = c(-20, 5500)) + themeWisconsin() +
    scale_color_manual(values = getPallette(length(unique(leadingRushersGame)))) + 
      labs(title = &amp;quot;Figure 3: Cumulative Rushing Yards by Game Number for Notable Wisconsin Running Backs, 2000 - 2018&amp;quot;, y = &amp;quot;Rushing Yards&amp;quot;,  x = &amp;quot;Game Number&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt;Comparing Wisconsin Running Backs Rushing Production by Seasonal Production, 1956 - 2018&lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;figure1 &amp;lt;- ggplot(data = z2, aes(season, roll_sum_yards, group = playerID)) +
    geom_point(color = &amp;quot;#c5050c&amp;quot;) +
    geom_line(color = &amp;quot;#c5050c&amp;quot;) +
    geom_text_repel(data = z2 %&amp;gt;% group_by(Player)%&amp;gt;% slice(which.max(roll_sum_yards)),
                    aes(season, roll_sum_yards, label = paste0(&amp;quot;  &amp;quot;,Player)), color = &amp;quot;black&amp;quot;, size = 6, direction = &amp;quot;y&amp;quot;, family = &amp;quot;Open Sans&amp;quot;, fontface = &amp;quot;bold&amp;quot;, hjust= 0, segment.colour = NA, point.padding = NA) +
    guides(color=FALSE) + scale_y_continuous(expand = c(0,0), limits = c(-20, 8000)) + scale_x_continuous(limits = c(1968,2028),expand = c(0, 0)) + themeWisconsin() + 
      labs(title = &amp;quot;Figure 1: Cumulative Rushing Yards by Season for Notable Wisconsin Running Backs, 1968 - 2018&amp;quot;, y = &amp;quot;Rushing Yards&amp;quot;,  x = &amp;quot;Date&amp;quot;)


figure4 &amp;lt;- ggplot() +
    geom_point(data = subset(z2, playerID %in% z2$playerID), aes(seasonNo, roll_sum_yards, group = playerID), color = &amp;quot;lightgrey&amp;quot;, alpha = .7) +
    geom_point(data = subset(z2, playerID %in% z2$playerID &amp;amp; playerID %in% leadingRushersSeason), aes(seasonNo, roll_sum_yards, group = playerID, color = playerID), alpha = 1) +
    geom_line(data = subset(z2, playerID %in% z2$playerID), aes(seasonNo, roll_sum_yards, group = playerID), color = &amp;quot;lightgrey&amp;quot;, alpha = .7) +
    geom_line(data = subset(z2, playerID %in% z2$playerID &amp;amp; playerID %in% leadingRushersSeason), aes(seasonNo, roll_sum_yards, group = playerID, color = playerID), alpha = 1) +
    geom_shadowtext(data = labelDat, aes(seasonNo, roll_sum_yards, label = paste0(&amp;quot;  &amp;quot;,Player), color = playerID), bg.colour=&amp;#39;white&amp;#39;, size = 6, hjust = 0, family = &amp;quot;Open Sans&amp;quot;) +
    guides(color=FALSE) + scale_x_continuous(labels=c(0:4), breaks=c(1:5),limits = c(1,6),expand = c(0, 0)) +
    scale_y_continuous(expand = c(0, 0), limits = c(-20, 8000)) +  themeWisconsin() +
    scale_color_manual(values = getPallette(length(unique(leadingRushersSeason)))) + 
      labs(title = &amp;quot;Figure 4: Cumulative Rushing Yards for Notable Wisconsin Running Backs by Seasons in Program&amp;quot;, y = &amp;quot;Rushing Yards&amp;quot;,  x = &amp;quot;Season&amp;quot;)

figure5 &amp;lt;- ggplot() +
    geom_col(data = z5, aes(x = playerOrder, y = roll_sum_yards), fill = &amp;quot;#c5050c&amp;quot;, alpha = .7) +
    scale_y_continuous(expand = c(0,0), limits = c(0,4500)) +
    geom_text(data = z5, aes(x = playerOrder, y = roll_sum_yards, label=format(z5$roll_sum_yards, nsmall=0, big.mark=&amp;quot;,&amp;quot;)),family = &amp;quot;Open Sans&amp;quot;, vjust=-.5) +
    guides(color=FALSE) + themeWisconsin() + 
    labs(title = &amp;quot;Figure 5: Cumulative Rushing Yards for Notable Wisconsin Running Backs in their Two Highest Rushing Seasons&amp;quot;, y = &amp;quot;Rushing Yards&amp;quot;,  x = &amp;quot;Player&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;
&lt;p&gt;Wisconsin has employed an incredible sequence of successful running backs since Barry Alvarez breathed life into the program in the early 1990s. Ron Dayne, Montee Ball, Melvin Gordon, and Taylor have each finished in the top 10 of Heisman voting - Taylor doing so twice - while also winning the Doak Walker Award for the best collegiate running back.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-01-28-wisconsin-rushing-history_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;2700&#34; class = &#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As displayed in Figure 1, the &lt;em&gt;four-year&lt;/em&gt; production of Ron Dayne stands out from the recent crop of running backs. Dayneâ€™s contributions on the field resulted in breaking the FBS career rushing mark (since eclipsed, &lt;a href=&#34;https://fivethirtyeight.com/features/why-college-footballs-new-all-time-rushing-leader-isnt-really-its-all-time-rushing-leader/&#34;&gt;controversially&lt;/a&gt;) in 1999, and he deserves some credit for establishing the class of running back commit Wisconsin is able to sign to this day.&lt;/p&gt;
&lt;div class=&#34;containerYouTube&#34;&gt;
&lt;iframe src=&#34;https://www.youtube.com/embed/jZq_KJyDIjQ?start=2055&#34; frameborder=&#34;0&#34; allowfullscreen class=&#34;video&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;p&gt;Taylor stands on the shoulders of a legacy of elite rushing prospects. Looking more closely at single game rushing data over time in Figure 2, Taylor fits in neatly with his fellow Badgers - he is equal in stature to the best recent Wisconsin running backs. Itâ€™s incredible to reflect on the 2011 data points signifying a Wisconsin team that fielded Montee Ball, James White and Melvin Gordon (albeit for only 3 games) simultaneously!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-01-28-wisconsin-rushing-history_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;2700&#34; class = &#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;When considering the rushing totals by game number is where his success has few comparisons. Figure 3 shows the cumulative rushing yards by game starting in 2000, the first year that single game data is available. Three things pop out to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anthony Davis and P.J. Hill had much better careers than I recall&lt;/li&gt;
&lt;li&gt;Brian Calhoun had a monster first game as a Badger - &lt;a href=&#34;https://www.sports-reference.com/cfb/boxscores/2005-09-03-wisconsin.html&#34;&gt;258 yards rushing against Bowling Green&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;James White and Montee Ball played &lt;em&gt;a lot&lt;/em&gt; of games in their career&lt;/li&gt;
&lt;li&gt;Jonathan Taylorâ€™s first 27 games have been unreal&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;/posts/2019-01-28-wisconsin-rushing-history_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;2700&#34; class = &#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;
&lt;p&gt;In fact, when compared to all Wisconsin rushers in their first two seasons (regardless of academic standing) Taylorâ€™s are the most yards all time. As seen in Figure 4, itâ€™s not particularly close!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-01-28-wisconsin-rushing-history_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;2700&#34; class = &#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;He is comfortably on pace to accrue more rushing yards than all Wisconsin running backs (aside from Ron Dayne) by the end of his junior season. If he returns for his senior season, the FBS career rushing mark might be in reach. Figure 5 displays the top two rushing seasons for notable Wisconsin running backs during their careers. The total rushing of Taylorâ€™s freshman and sophomore campaigns stack up as the second highest total of the &lt;em&gt;any of the two best seasons&lt;/em&gt; of all Wisconsin running backs.&lt;/p&gt;
&lt;img src=&#34;/posts/2019-01-28-wisconsin-rushing-history_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;2700&#34; class = &#34;img-responsive&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;
&lt;p&gt;Over the first two seasons of his career, Taylor accumulated more rushing yards:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;than any rusher in school history over their first two years&lt;/li&gt;
&lt;li&gt;than P.J. Hill, John Clay, and Rufus Ferguson in their &lt;strong&gt;three&lt;/strong&gt; college seasons&lt;/li&gt;
&lt;li&gt;than James White, Billy Marek, Brent Moss, Terrell Fletcher, Corey Clement, Larry Emery, and Carl McCollough in their &lt;strong&gt;four&lt;/strong&gt; respective college seasons&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jonathan Taylor has chewed up yards - and the best might still be to come.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Kris Bryant Performance Projection</title>
      <link>/posts/2015-03-25-bryant-visualization/</link>
      <pubDate>Wed, 25 Mar 2015 00:00:00 +0000</pubDate>
      <author>mdlee12@gmail.com (Michael Lee)</author>
      <guid>/posts/2015-03-25-bryant-visualization/</guid>
      <description>&lt;body&gt;


&lt;div class=&#34;container-fluid&#34;&gt;

&lt;p&gt;A dynamic rCharts visualization displaying performance projections for Kris Bryant based on his 10 most similar career MiLB comparable players. Read more at &lt;a href=&#34;http://mikelee.co/posts/milb-similarity-scores/&#34; class=&#34;uri&#34;&gt;http://mikelee.co/posts/milb-similarity-scores/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can change the y-axis parameters by selecting the performance measure youâ€™d like to visualize. Additionally, hover over the points to see player details, and select players in the legend to show or remove their data from the graph.&lt;/p&gt;
&lt;iframe src=&#34;/knitr/bryant.html&#34; , width=&#34;100%,&#34; height=&#34;550px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;
&lt;div class=&#34;table-responsive&#34;&gt;
&lt;table class=&#34;table table-hover&#34;&gt;
&lt;th&gt;
Year
&lt;/th&gt;
&lt;th&gt;
Age
&lt;/th&gt;
&lt;th&gt;
LevEq
&lt;/th&gt;
&lt;th&gt;
G
&lt;/th&gt;
&lt;th&gt;
PA
&lt;/th&gt;
&lt;th&gt;
AB
&lt;/th&gt;
&lt;th&gt;
R
&lt;/th&gt;
&lt;th&gt;
H
&lt;/th&gt;
&lt;th&gt;
X2B
&lt;/th&gt;
&lt;th&gt;
X3B
&lt;/th&gt;
&lt;th&gt;
HR
&lt;/th&gt;
&lt;th&gt;
RBI
&lt;/th&gt;
&lt;th&gt;
SB
&lt;/th&gt;
&lt;th&gt;
CS
&lt;/th&gt;
&lt;th&gt;
BB
&lt;/th&gt;
&lt;th&gt;
SO
&lt;/th&gt;
&lt;th&gt;
BA
&lt;/th&gt;
&lt;th&gt;
OBP
&lt;/th&gt;
&lt;th&gt;
SLG
&lt;/th&gt;
&lt;th&gt;
OPS
&lt;/th&gt;
&lt;th&gt;
Count
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2015
&lt;/td&gt;
&lt;td&gt;
23
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
130
&lt;/td&gt;
&lt;td&gt;
548
&lt;/td&gt;
&lt;td&gt;
489
&lt;/td&gt;
&lt;td&gt;
76
&lt;/td&gt;
&lt;td&gt;
138
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;td&gt;
24
&lt;/td&gt;
&lt;td&gt;
83
&lt;/td&gt;
&lt;td&gt;
9
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
47
&lt;/td&gt;
&lt;td&gt;
105
&lt;/td&gt;
&lt;td&gt;
0.282
&lt;/td&gt;
&lt;td&gt;
0.35
&lt;/td&gt;
&lt;td&gt;
0.515
&lt;/td&gt;
&lt;td&gt;
0.865
&lt;/td&gt;
&lt;td&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2016
&lt;/td&gt;
&lt;td&gt;
24
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
132
&lt;/td&gt;
&lt;td&gt;
551
&lt;/td&gt;
&lt;td&gt;
492
&lt;/td&gt;
&lt;td&gt;
77
&lt;/td&gt;
&lt;td&gt;
140
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;td&gt;
23
&lt;/td&gt;
&lt;td&gt;
77
&lt;/td&gt;
&lt;td&gt;
8
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
49
&lt;/td&gt;
&lt;td&gt;
107
&lt;/td&gt;
&lt;td&gt;
0.285
&lt;/td&gt;
&lt;td&gt;
0.354
&lt;/td&gt;
&lt;td&gt;
0.51
&lt;/td&gt;
&lt;td&gt;
0.864
&lt;/td&gt;
&lt;td&gt;
9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2017
&lt;/td&gt;
&lt;td&gt;
25
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
115
&lt;/td&gt;
&lt;td&gt;
476
&lt;/td&gt;
&lt;td&gt;
424
&lt;/td&gt;
&lt;td&gt;
66
&lt;/td&gt;
&lt;td&gt;
121
&lt;/td&gt;
&lt;td&gt;
26
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
20
&lt;/td&gt;
&lt;td&gt;
72
&lt;/td&gt;
&lt;td&gt;
7
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
43
&lt;/td&gt;
&lt;td&gt;
89
&lt;/td&gt;
&lt;td&gt;
0.285
&lt;/td&gt;
&lt;td&gt;
0.356
&lt;/td&gt;
&lt;td&gt;
0.502
&lt;/td&gt;
&lt;td&gt;
0.859
&lt;/td&gt;
&lt;td&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2018
&lt;/td&gt;
&lt;td&gt;
26
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
129
&lt;/td&gt;
&lt;td&gt;
543
&lt;/td&gt;
&lt;td&gt;
478
&lt;/td&gt;
&lt;td&gt;
76
&lt;/td&gt;
&lt;td&gt;
135
&lt;/td&gt;
&lt;td&gt;
31
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
22
&lt;/td&gt;
&lt;td&gt;
73
&lt;/td&gt;
&lt;td&gt;
7
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
56
&lt;/td&gt;
&lt;td&gt;
93
&lt;/td&gt;
&lt;td&gt;
0.282
&lt;/td&gt;
&lt;td&gt;
0.363
&lt;/td&gt;
&lt;td&gt;
0.498
&lt;/td&gt;
&lt;td&gt;
0.861
&lt;/td&gt;
&lt;td&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2019
&lt;/td&gt;
&lt;td&gt;
27
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
148
&lt;/td&gt;
&lt;td&gt;
635
&lt;/td&gt;
&lt;td&gt;
569
&lt;/td&gt;
&lt;td&gt;
92
&lt;/td&gt;
&lt;td&gt;
169
&lt;/td&gt;
&lt;td&gt;
36
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
28
&lt;/td&gt;
&lt;td&gt;
94
&lt;/td&gt;
&lt;td&gt;
15
&lt;/td&gt;
&lt;td&gt;
6
&lt;/td&gt;
&lt;td&gt;
58
&lt;/td&gt;
&lt;td&gt;
104
&lt;/td&gt;
&lt;td&gt;
0.297
&lt;/td&gt;
&lt;td&gt;
0.365
&lt;/td&gt;
&lt;td&gt;
0.522
&lt;/td&gt;
&lt;td&gt;
0.887
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2020
&lt;/td&gt;
&lt;td&gt;
28
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
151
&lt;/td&gt;
&lt;td&gt;
647
&lt;/td&gt;
&lt;td&gt;
574
&lt;/td&gt;
&lt;td&gt;
87
&lt;/td&gt;
&lt;td&gt;
174
&lt;/td&gt;
&lt;td&gt;
38
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
25
&lt;/td&gt;
&lt;td&gt;
94
&lt;/td&gt;
&lt;td&gt;
11
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
64
&lt;/td&gt;
&lt;td&gt;
109
&lt;/td&gt;
&lt;td&gt;
0.303
&lt;/td&gt;
&lt;td&gt;
0.376
&lt;/td&gt;
&lt;td&gt;
0.51
&lt;/td&gt;
&lt;td&gt;
0.886
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2021
&lt;/td&gt;
&lt;td&gt;
29
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
127
&lt;/td&gt;
&lt;td&gt;
532
&lt;/td&gt;
&lt;td&gt;
475
&lt;/td&gt;
&lt;td&gt;
70
&lt;/td&gt;
&lt;td&gt;
130
&lt;/td&gt;
&lt;td&gt;
26
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
20
&lt;/td&gt;
&lt;td&gt;
77
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
47
&lt;/td&gt;
&lt;td&gt;
96
&lt;/td&gt;
&lt;td&gt;
0.274
&lt;/td&gt;
&lt;td&gt;
0.343
&lt;/td&gt;
&lt;td&gt;
0.472
&lt;/td&gt;
&lt;td&gt;
0.815
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2022
&lt;/td&gt;
&lt;td&gt;
30
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
143
&lt;/td&gt;
&lt;td&gt;
591
&lt;/td&gt;
&lt;td&gt;
525
&lt;/td&gt;
&lt;td&gt;
81
&lt;/td&gt;
&lt;td&gt;
141
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
21
&lt;/td&gt;
&lt;td&gt;
81
&lt;/td&gt;
&lt;td&gt;
10
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
56
&lt;/td&gt;
&lt;td&gt;
104
&lt;/td&gt;
&lt;td&gt;
0.269
&lt;/td&gt;
&lt;td&gt;
0.345
&lt;/td&gt;
&lt;td&gt;
0.461
&lt;/td&gt;
&lt;td&gt;
0.806
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2023
&lt;/td&gt;
&lt;td&gt;
31
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
159
&lt;/td&gt;
&lt;td&gt;
696
&lt;/td&gt;
&lt;td&gt;
620
&lt;/td&gt;
&lt;td&gt;
98
&lt;/td&gt;
&lt;td&gt;
163
&lt;/td&gt;
&lt;td&gt;
28
&lt;/td&gt;
&lt;td&gt;
6
&lt;/td&gt;
&lt;td&gt;
30
&lt;/td&gt;
&lt;td&gt;
93
&lt;/td&gt;
&lt;td&gt;
9
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
64
&lt;/td&gt;
&lt;td&gt;
120
&lt;/td&gt;
&lt;td&gt;
0.263
&lt;/td&gt;
&lt;td&gt;
0.336
&lt;/td&gt;
&lt;td&gt;
0.473
&lt;/td&gt;
&lt;td&gt;
0.808
&lt;/td&gt;
&lt;td&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2024
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
118
&lt;/td&gt;
&lt;td&gt;
440
&lt;/td&gt;
&lt;td&gt;
380
&lt;/td&gt;
&lt;td&gt;
48
&lt;/td&gt;
&lt;td&gt;
93
&lt;/td&gt;
&lt;td&gt;
22
&lt;/td&gt;
&lt;td&gt;
1
&lt;/td&gt;
&lt;td&gt;
14
&lt;/td&gt;
&lt;td&gt;
63
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
1
&lt;/td&gt;
&lt;td&gt;
46
&lt;/td&gt;
&lt;td&gt;
60
&lt;/td&gt;
&lt;td&gt;
0.245
&lt;/td&gt;
&lt;td&gt;
0.327
&lt;/td&gt;
&lt;td&gt;
0.418
&lt;/td&gt;
&lt;td&gt;
0.745
&lt;/td&gt;
&lt;td&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Be sure to bookmark my site to check out future visualizations!&lt;/p&gt;


&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
$(document).ready(function () {
  $(&#39;tr.header&#39;).parent(&#39;thead&#39;).parent(&#39;table&#39;).addClass(&#39;table table-condensed&#39;);
});

&lt;/script&gt;

&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement(&#34;script&#34;);
    script.type = &#34;text/javascript&#34;;
    script.src  = &#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;;
    document.getElementsByTagName(&#34;head&#34;)[0].appendChild(script);
  })();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Working with Minor League Similarity Scores</title>
      <link>/posts/2015-03-25-milb-similarity-scores/</link>
      <pubDate>Wed, 25 Mar 2015 00:00:00 +0000</pubDate>
      <author>mdlee12@gmail.com (Michael Lee)</author>
      <guid>/posts/2015-03-25-milb-similarity-scores/</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
There are some people who see baseball players that way-each one is unique, absolutely not interchangeable with another. I don&#39;t deny the validity of that approach-but if you take that tack, then you can&#39;t turn around and argue that your player should be in the Hall of Fame because his numbers are just as good as this other player&#39;s. &#34;Similarity&#34; is a complex concept, and two players who are not statistically similar may be profoundly similar in some other way...players who have similar primary characteristics will tend to have similar secondary characteristics as well.

&lt;p&gt; - Bill James in &lt;a href=&#34;https://books.google.com/books?id=f_v8RmhGjekC&amp;pg=PT101&amp;dq=similarity+score+bill+james&amp;hl=en&amp;sa=X&amp;ei=lmIAVcabOsu4ggTAkoS4DA&amp;ved=0CDYQ6AEwBA#v=onepage&amp;q=similarity%20score%20bill%20james&amp;f=false&#34;&gt;Whatever Happened to the Hall of Fame?&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/p&gt;

&lt;p&gt;Similarity scores were created by Bill James to compare the careers of Hall of Fame eligible players.In  In the most basic sense, similarity scores use aggregated performance statistics to compare a player&amp;rsquo;s worth for induction into the Hall of Fame. Projection systems follow from this method: Steamer, PECOTA, Marcel, ZiPS, and others use some combination of a player&amp;rsquo;s recent performance, usually the last 3-4 seasons, to project future performance. Depending on the method, a player&amp;rsquo;s base statistics are then modified using typical aging curves, linear weights, regression, and numerous other factors. Notably, PECOTA uses 3 year performance statistics of &lt;i&gt;comparable&lt;/i&gt; players, using nearest-neighors analysis, to forecast a player&amp;rsquo;s future performance.&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;
&#34;The PECOTA similarity scores are based primarily on looking at a three-year window of a pitcherâ€™s performance. Thus, we might look at what a pitcher did from ages 35-37, and compare that against the most similar age 35-37 performances, after adjusting for parks, league effects, and a whole host of other things. This is different from the similarity scores you might see at baseball-reference.com or in other places, which attempt to evaluate the totality of a playerâ€™s career up to a given age.&#34;
&lt;p&gt;
&lt;a href=&#34;http://web.archive.org/web/20120205121306/http://www.baseballprospectus.com/unfiltered/?p=136&#34;&gt;Nate Silver&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;One of Silver&amp;rsquo;s first explanations of &lt;a href=&#34;http://www.baseballprospectus.com/article.php?articleid=2659&#34;&gt;PECOTA&amp;rsquo;s forecasting method&lt;/a&gt; details the value in projecting a minor league player&amp;rsquo;s future career based on the career performance of their comparisons. Teams would be remiss to not consider what a player&amp;rsquo;s future statistics might look like based on their previous performance. PECOTA has created a projection system that models minor league players better than it&amp;rsquo;s competitors utilizing the comparable player&amp;rsquo;s model. Let&amp;rsquo;s use &lt;a href=&#34;http://mikelee.co/milb-scraper-with-rvest/&#34;&gt;our minor league database&lt;/a&gt; to investigate minor league similarity scores and create projections for a notable minor league player.&lt;/p&gt;

&lt;h1&gt;&lt;a href=&#34;http://www.baseball-reference.com/about/similarity.shtml&#34;&gt;Bill James Similarity Scores&lt;/a&gt;&lt;/h1&gt;

&lt;h3&gt;Similarities - Career&lt;/h3&gt;

&lt;p&gt;James&amp;rsquo; Similarity Score model was designed for major league careers, but let&amp;rsquo;s see how the model holds for minor league careers. The dataset includes minor league statistics from 2000-2014:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;table-responsive&#34;&gt;&lt;table class=&#34;table table-hover&#34; width=&#34;100%&#34;&gt;
&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Age&lt;/th&gt;&lt;th&gt;LevEq&lt;/th&gt;&lt;th&gt;G&lt;/th&gt;&lt;th&gt;PA&lt;/th&gt;&lt;th&gt;AB&lt;/th&gt;&lt;th&gt;R&lt;/th&gt;&lt;th&gt;H&lt;/th&gt;&lt;th&gt;X2B&lt;/th&gt;&lt;th&gt;X3B&lt;/th&gt;&lt;th&gt;HR&lt;/th&gt;&lt;th&gt;RBI&lt;/th&gt;&lt;th&gt;SB&lt;/th&gt;&lt;th&gt;CS&lt;/th&gt;&lt;th&gt;BB&lt;/th&gt;&lt;th&gt;SO&lt;/th&gt;&lt;th&gt;BA&lt;/th&gt;&lt;th&gt;OBP&lt;/th&gt;&lt;th&gt;SLG&lt;/th&gt;&lt;th&gt;OPS&lt;/th&gt;&lt;th&gt;TB&lt;/th&gt;&lt;th&gt;SS&lt;/th&gt;&lt;/tr&gt;
 &lt;tr class=&#34;success&#34;&gt;&lt;td&gt;Kris Bryant&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1.58&lt;/td&gt;&lt;td&gt;174&lt;/td&gt;&lt;td&gt;740&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;203&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;52&lt;/td&gt;&lt;td&gt;142&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;97&lt;/td&gt;&lt;td&gt;197&lt;/td&gt;&lt;td&gt;0.327&lt;/td&gt;&lt;td&gt;0.428&lt;/td&gt;&lt;td&gt;0.666&lt;/td&gt;&lt;td&gt;1.094&lt;/td&gt;&lt;td&gt;413&lt;/td&gt;&lt;td&gt;1000&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Ryan Braun&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;1.67&lt;/td&gt;&lt;td&gt;199&lt;/td&gt;&lt;td&gt;864&lt;/td&gt;&lt;td&gt;767&lt;/td&gt;&lt;td&gt;131&lt;/td&gt;&lt;td&gt;240&lt;/td&gt;&lt;td&gt;61&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;144&lt;/td&gt;&lt;td&gt;34&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;0.313&lt;/td&gt;&lt;td&gt;0.375&lt;/td&gt;&lt;td&gt;0.572&lt;/td&gt;&lt;td&gt;0.947&lt;/td&gt;&lt;td&gt;439&lt;/td&gt;&lt;td&gt;926&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Alex Gordon*&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1.89&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1061&lt;/td&gt;&lt;td&gt;867&lt;/td&gt;&lt;td&gt;199&lt;/td&gt;&lt;td&gt;278&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;170&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;155&lt;/td&gt;&lt;td&gt;212&lt;/td&gt;&lt;td&gt;0.321&lt;/td&gt;&lt;td&gt;0.438&lt;/td&gt;&lt;td&gt;0.578&lt;/td&gt;&lt;td&gt;1.016&lt;/td&gt;&lt;td&gt;501&lt;/td&gt;&lt;td&gt;906&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Kelvin Diaz&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;182&lt;/td&gt;&lt;td&gt;765&lt;/td&gt;&lt;td&gt;639&lt;/td&gt;&lt;td&gt;117&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;47&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;74&lt;/td&gt;&lt;td&gt;92&lt;/td&gt;&lt;td&gt;0.333&lt;/td&gt;&lt;td&gt;0.426&lt;/td&gt;&lt;td&gt;0.532&lt;/td&gt;&lt;td&gt;0.958&lt;/td&gt;&lt;td&gt;340&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Jake Lamb*&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;244&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;920&lt;/td&gt;&lt;td&gt;158&lt;/td&gt;&lt;td&gt;295&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;193&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;127&lt;/td&gt;&lt;td&gt;229&lt;/td&gt;&lt;td&gt;0.321&lt;/td&gt;&lt;td&gt;0.406&lt;/td&gt;&lt;td&gt;0.553&lt;/td&gt;&lt;td&gt;0.959&lt;/td&gt;&lt;td&gt;509&lt;/td&gt;&lt;td&gt;902&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;D.J. Peterson&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1.25&lt;/td&gt;&lt;td&gt;178&lt;/td&gt;&lt;td&gt;777&lt;/td&gt;&lt;td&gt;703&lt;/td&gt;&lt;td&gt;119&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;44&lt;/td&gt;&lt;td&gt;158&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;65&lt;/td&gt;&lt;td&gt;158&lt;/td&gt;&lt;td&gt;0.299&lt;/td&gt;&lt;td&gt;0.362&lt;/td&gt;&lt;td&gt;0.552&lt;/td&gt;&lt;td&gt;0.914&lt;/td&gt;&lt;td&gt;388&lt;/td&gt;&lt;td&gt;896&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Matt Williams&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;2.17&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;71&lt;/td&gt;&lt;td&gt;65&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0.338&lt;/td&gt;&lt;td&gt;0.394&lt;/td&gt;&lt;td&gt;0.646&lt;/td&gt;&lt;td&gt;1.04&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;894&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Evan Longoria&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;2.37&lt;/td&gt;&lt;td&gt;219&lt;/td&gt;&lt;td&gt;937&lt;/td&gt;&lt;td&gt;803&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;43&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;47&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;170&lt;/td&gt;&lt;td&gt;0.296&lt;/td&gt;&lt;td&gt;0.385&lt;/td&gt;&lt;td&gt;0.528&lt;/td&gt;&lt;td&gt;0.913&lt;/td&gt;&lt;td&gt;424&lt;/td&gt;&lt;td&gt;890&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Jose Fernandez&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;255&lt;/td&gt;&lt;td&gt;1052&lt;/td&gt;&lt;td&gt;920&lt;/td&gt;&lt;td&gt;169&lt;/td&gt;&lt;td&gt;287&lt;/td&gt;&lt;td&gt;74&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;182&lt;/td&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;0.312&lt;/td&gt;&lt;td&gt;0.389&lt;/td&gt;&lt;td&gt;0.537&lt;/td&gt;&lt;td&gt;0.926&lt;/td&gt;&lt;td&gt;494&lt;/td&gt;&lt;td&gt;889&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Albert Pujols&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;1.67&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;544&lt;/td&gt;&lt;td&gt;490&lt;/td&gt;&lt;td&gt;74&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;46&lt;/td&gt;&lt;td&gt;47&lt;/td&gt;&lt;td&gt;0.314&lt;/td&gt;&lt;td&gt;0.378&lt;/td&gt;&lt;td&gt;0.543&lt;/td&gt;&lt;td&gt;0.921&lt;/td&gt;&lt;td&gt;266&lt;/td&gt;&lt;td&gt;887&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Pedro Feliz&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;2.5&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;646&lt;/td&gt;&lt;td&gt;606&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;174&lt;/td&gt;&lt;td&gt;39&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;38&lt;/td&gt;&lt;td&gt;119&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;31&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;0.287&lt;/td&gt;&lt;td&gt;0.321&lt;/td&gt;&lt;td&gt;0.546&lt;/td&gt;&lt;td&gt;0.867&lt;/td&gt;&lt;td&gt;331&lt;/td&gt;&lt;td&gt;883&lt;/td&gt;&lt;/tr&gt;
 &lt;/table&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;You might have heard of a few of those names. The issue with these similarities is that they encompass a player&amp;rsquo;s &lt;i&gt;career&lt;/i&gt; minor league statistics; we&amp;rsquo;re more interested in the performance of Bryant&amp;rsquo;s same-aged peers.&lt;/p&gt;

&lt;h3&gt;Similarities - Age&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s see how he compares to other 22 year old players:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;table-responsive&#34;&gt;&lt;table class=&#34;table table-hover&#34;&gt;
&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Age&lt;/th&gt;&lt;th&gt;LevEq&lt;/th&gt;&lt;th&gt;G&lt;/th&gt;&lt;th&gt;PA&lt;/th&gt;&lt;th&gt;AB&lt;/th&gt;&lt;th&gt;R&lt;/th&gt;&lt;th&gt;H&lt;/th&gt;&lt;th&gt;X2B&lt;/th&gt;&lt;th&gt;X3B&lt;/th&gt;&lt;th&gt;HR&lt;/th&gt;&lt;th&gt;RBI&lt;/th&gt;&lt;th&gt;SB&lt;/th&gt;&lt;th&gt;CS&lt;/th&gt;&lt;th&gt;BB&lt;/th&gt;&lt;th&gt;SO&lt;/th&gt;&lt;th&gt;BA&lt;/th&gt;&lt;th&gt;OBP&lt;/th&gt;&lt;th&gt;SLG&lt;/th&gt;&lt;th&gt;OPS&lt;/th&gt;&lt;th&gt;TB&lt;/th&gt;&lt;th&gt;SS&lt;/th&gt;&lt;/tr&gt;
 &lt;tr class=&#34;success&#34;&gt;&lt;td&gt;Kris Bryant&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;2.5&lt;/td&gt;&lt;td&gt;174&lt;/td&gt;&lt;td&gt;740&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;203&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;52&lt;/td&gt;&lt;td&gt;142&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;97&lt;/td&gt;&lt;td&gt;197&lt;/td&gt;&lt;td&gt;0.327&lt;/td&gt;&lt;td&gt;0.428&lt;/td&gt;&lt;td&gt;0.666&lt;/td&gt;&lt;td&gt;1.095&lt;/td&gt;&lt;td&gt;413&lt;/td&gt;&lt;td&gt;1000&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Alex Gordon*&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;130&lt;/td&gt;&lt;td&gt;576&lt;/td&gt;&lt;td&gt;486&lt;/td&gt;&lt;td&gt;111&lt;/td&gt;&lt;td&gt;158&lt;/td&gt;&lt;td&gt;39&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;101&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;0.325&lt;/td&gt;&lt;td&gt;0.427&lt;/td&gt;&lt;td&gt;0.588&lt;/td&gt;&lt;td&gt;1.016&lt;/td&gt;&lt;td&gt;286&lt;/td&gt;&lt;td&gt;932&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Corey Dickerson*&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;743&lt;/td&gt;&lt;td&gt;659&lt;/td&gt;&lt;td&gt;132&lt;/td&gt;&lt;td&gt;204&lt;/td&gt;&lt;td&gt;49&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;148&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;150&lt;/td&gt;&lt;td&gt;0.31&lt;/td&gt;&lt;td&gt;0.38&lt;/td&gt;&lt;td&gt;0.631&lt;/td&gt;&lt;td&gt;1.011&lt;/td&gt;&lt;td&gt;416&lt;/td&gt;&lt;td&gt;924&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Nick Akins&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;548&lt;/td&gt;&lt;td&gt;472&lt;/td&gt;&lt;td&gt;94&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;40&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;120&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;135&lt;/td&gt;&lt;td&gt;0.322&lt;/td&gt;&lt;td&gt;0.407&lt;/td&gt;&lt;td&gt;0.64&lt;/td&gt;&lt;td&gt;1.047&lt;/td&gt;&lt;td&gt;302&lt;/td&gt;&lt;td&gt;921&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Kevin Mench&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;132&lt;/td&gt;&lt;td&gt;583&lt;/td&gt;&lt;td&gt;491&lt;/td&gt;&lt;td&gt;118&lt;/td&gt;&lt;td&gt;164&lt;/td&gt;&lt;td&gt;39&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;121&lt;/td&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;78&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;0.334&lt;/td&gt;&lt;td&gt;0.427&lt;/td&gt;&lt;td&gt;0.615&lt;/td&gt;&lt;td&gt;1.042&lt;/td&gt;&lt;td&gt;302&lt;/td&gt;&lt;td&gt;909&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Ryan Braun&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;td&gt;165&lt;/td&gt;&lt;td&gt;730&lt;/td&gt;&lt;td&gt;650&lt;/td&gt;&lt;td&gt;103&lt;/td&gt;&lt;td&gt;200&lt;/td&gt;&lt;td&gt;49&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;55&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;0.308&lt;/td&gt;&lt;td&gt;0.367&lt;/td&gt;&lt;td&gt;0.549&lt;/td&gt;&lt;td&gt;0.917&lt;/td&gt;&lt;td&gt;357&lt;/td&gt;&lt;td&gt;907&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Mark Teixeira#&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;375&lt;/td&gt;&lt;td&gt;321&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;102&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;46&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;0.318&lt;/td&gt;&lt;td&gt;0.413&lt;/td&gt;&lt;td&gt;0.592&lt;/td&gt;&lt;td&gt;1.005&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;904&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Jake Lamb*&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;619&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;95&lt;/td&gt;&lt;td&gt;167&lt;/td&gt;&lt;td&gt;44&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;74&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;0.316&lt;/td&gt;&lt;td&gt;0.405&lt;/td&gt;&lt;td&gt;0.544&lt;/td&gt;&lt;td&gt;0.949&lt;/td&gt;&lt;td&gt;287&lt;/td&gt;&lt;td&gt;902&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;James Darnell&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;142&lt;/td&gt;&lt;td&gt;630&lt;/td&gt;&lt;td&gt;524&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;167&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;98&lt;/td&gt;&lt;td&gt;101&lt;/td&gt;&lt;td&gt;0.319&lt;/td&gt;&lt;td&gt;0.428&lt;/td&gt;&lt;td&gt;0.542&lt;/td&gt;&lt;td&gt;0.97&lt;/td&gt;&lt;td&gt;284&lt;/td&gt;&lt;td&gt;901&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Jedd Gyorko&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;945&lt;/td&gt;&lt;td&gt;844&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;273&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;155&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;92&lt;/td&gt;&lt;td&gt;171&lt;/td&gt;&lt;td&gt;0.323&lt;/td&gt;&lt;td&gt;0.392&lt;/td&gt;&lt;td&gt;0.518&lt;/td&gt;&lt;td&gt;0.909&lt;/td&gt;&lt;td&gt;437&lt;/td&gt;&lt;td&gt;900&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Hunter Pence&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;737&lt;/td&gt;&lt;td&gt;652&lt;/td&gt;&lt;td&gt;119&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;40&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;39&lt;/td&gt;&lt;td&gt;127&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;120&lt;/td&gt;&lt;td&gt;0.317&lt;/td&gt;&lt;td&gt;0.391&lt;/td&gt;&lt;td&gt;0.574&lt;/td&gt;&lt;td&gt;0.964&lt;/td&gt;&lt;td&gt;374&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Still a very impressive list. Using these similar players, lets take a play out of the PECOTA playbook and generate some basic projections without adjusting for outside effects (park factors, leagues, league-wide performance shifts, etc). By simply calculating the mean of these top 10 player comparables for each statistical category we can get a general idea of Bryant&amp;rsquo;s future performance.&lt;/p&gt;

&lt;h3&gt;10 Year Projection - Kris Bryant&lt;/h3&gt;

&lt;p&gt;&lt;div class=&#34;table-responsive&#34;&gt;&lt;table class=&#34;table table-hover&#34;&gt;&lt;th&gt;Year&lt;/th&gt;&lt;th&gt;Age&lt;/th&gt;&lt;th&gt;LevEq&lt;/th&gt;&lt;th&gt;G&lt;/th&gt;&lt;th&gt;PA&lt;/th&gt;&lt;th&gt;AB&lt;/th&gt;&lt;th&gt;R&lt;/th&gt;&lt;th&gt;H&lt;/th&gt;&lt;th&gt;X2B&lt;/th&gt;&lt;th&gt;X3B&lt;/th&gt;&lt;th&gt;HR&lt;/th&gt;&lt;th&gt;RBI&lt;/th&gt;&lt;th&gt;SB&lt;/th&gt;&lt;th&gt;CS&lt;/th&gt;&lt;th&gt;BB&lt;/th&gt;&lt;th&gt;SO&lt;/th&gt;&lt;th&gt;BA&lt;/th&gt;&lt;th&gt;OBP&lt;/th&gt;&lt;th&gt;SLG&lt;/th&gt;&lt;th&gt;OPS&lt;/th&gt;&lt;th&gt;Count&lt;/th&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2015&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;130&lt;/td&gt;&lt;td&gt;548&lt;/td&gt;&lt;td&gt;489&lt;/td&gt;&lt;td&gt;76&lt;/td&gt;&lt;td&gt;138&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47&lt;/td&gt;&lt;td&gt;105&lt;/td&gt;&lt;td&gt;0.282&lt;/td&gt;&lt;td&gt;0.35&lt;/td&gt;&lt;td&gt;0.515&lt;/td&gt;&lt;td&gt;0.865&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2016&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;132&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;492&lt;/td&gt;&lt;td&gt;77&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;77&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;49&lt;/td&gt;&lt;td&gt;107&lt;/td&gt;&lt;td&gt;0.285&lt;/td&gt;&lt;td&gt;0.354&lt;/td&gt;&lt;td&gt;0.51&lt;/td&gt;&lt;td&gt;0.864&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2017&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;115&lt;/td&gt;&lt;td&gt;476&lt;/td&gt;&lt;td&gt;424&lt;/td&gt;&lt;td&gt;66&lt;/td&gt;&lt;td&gt;121&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;43&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;0.285&lt;/td&gt;&lt;td&gt;0.356&lt;/td&gt;&lt;td&gt;0.502&lt;/td&gt;&lt;td&gt;0.859&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2018&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;543&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;76&lt;/td&gt;&lt;td&gt;135&lt;/td&gt;&lt;td&gt;31&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;73&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;56&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;0.282&lt;/td&gt;&lt;td&gt;0.363&lt;/td&gt;&lt;td&gt;0.498&lt;/td&gt;&lt;td&gt;0.861&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2019&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;148&lt;/td&gt;&lt;td&gt;635&lt;/td&gt;&lt;td&gt;569&lt;/td&gt;&lt;td&gt;92&lt;/td&gt;&lt;td&gt;169&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;94&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;0.297&lt;/td&gt;&lt;td&gt;0.365&lt;/td&gt;&lt;td&gt;0.522&lt;/td&gt;&lt;td&gt;0.887&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2020&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;647&lt;/td&gt;&lt;td&gt;574&lt;/td&gt;&lt;td&gt;87&lt;/td&gt;&lt;td&gt;174&lt;/td&gt;&lt;td&gt;38&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;td&gt;94&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;0.303&lt;/td&gt;&lt;td&gt;0.376&lt;/td&gt;&lt;td&gt;0.51&lt;/td&gt;&lt;td&gt;0.886&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2021&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;127&lt;/td&gt;&lt;td&gt;532&lt;/td&gt;&lt;td&gt;475&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;130&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;77&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;47&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;0.274&lt;/td&gt;&lt;td&gt;0.343&lt;/td&gt;&lt;td&gt;0.472&lt;/td&gt;&lt;td&gt;0.815&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2022&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;143&lt;/td&gt;&lt;td&gt;591&lt;/td&gt;&lt;td&gt;525&lt;/td&gt;&lt;td&gt;81&lt;/td&gt;&lt;td&gt;141&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;81&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;56&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;0.269&lt;/td&gt;&lt;td&gt;0.345&lt;/td&gt;&lt;td&gt;0.461&lt;/td&gt;&lt;td&gt;0.806&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2023&lt;/td&gt;&lt;td&gt;31&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;159&lt;/td&gt;&lt;td&gt;696&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;98&lt;/td&gt;&lt;td&gt;163&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;120&lt;/td&gt;&lt;td&gt;0.263&lt;/td&gt;&lt;td&gt;0.336&lt;/td&gt;&lt;td&gt;0.473&lt;/td&gt;&lt;td&gt;0.808&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;2024&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;118&lt;/td&gt;&lt;td&gt;440&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;46&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;0.245&lt;/td&gt;&lt;td&gt;0.327&lt;/td&gt;&lt;td&gt;0.418&lt;/td&gt;&lt;td&gt;0.745&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h3&gt;Lets take that table and visualize it! &lt;/h3&gt;

&lt;p&gt;Using &lt;a href=&#34;http://ramnathv.github.io/rCharts&#34;&gt;rCharts&lt;/a&gt;, an interactive visualization package maintained by &lt;a href=&#34;https://github.com/ramnathv&#34;&gt;Ramnath Vaidyanathan&lt;/a&gt;, I created a Rmarkdown page with knitr displaying the projection data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/posts/2015-03-25-bryant-visualization/&#34;&gt;Have a look!&lt;/a&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div class=&#34;well&#34;&gt;&lt;a class=&#34;btn btn-primary btn-lg btn-block&#34; href=&#34;/posts/2015-03-25-bryant-visualization/&#34;&gt;Bryant Projection Visualization&lt;/a&gt;&lt;/p&gt;&lt;/button&gt;&lt;/div&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Have feedback, questions, or want to see something else added? Check out the code I used to create &lt;a href=&#34;https://github.com/mikeleeco/mikeleeco.github.com/blob/master/_posts/2015-03-25-milb-similarity-scores.md&#34;&gt;this page&lt;/a&gt; or fork my repository to propose changes. &lt;a class=&#34;btn btn-primary&#34; href=&#34;https://github.com/mikeleeco/Kris-Bryant-Projection/fork&#34;&gt;Edit My Code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s Make a Minor League Baseball Database!</title>
      <link>/posts/2015-02-23-milb-scraper-with-rvest/</link>
      <pubDate>Mon, 23 Feb 2015 00:00:00 +0000</pubDate>
      <author>mdlee12@gmail.com (Michael Lee)</author>
      <guid>/posts/2015-02-23-milb-scraper-with-rvest/</guid>
      <description>&lt;p&gt;
Baseball is a game of numbers, some more accessible than others. Rates, averages, linear weights, aging curves, and WAR are only a few of the myriad statistics influencing decision makers in MLB franchises. An endless amount of data is accessible to the average fan at many sites, most notably the &lt;a href=&#34;http://www.seanlahman.com/baseball-archive/statistics/&#34;&gt;Lahman Baseball Database&lt;/a&gt;, which is the most robust catalog of MLB player statistics available to the public.
&lt;/p&gt;
&lt;p&gt;
One area of relatively limited accessibility to the average fan is statistics for Minor League players. Though player statistics by position, year, and team are available at many sites, a thorough catalog of MiLB data akin to the Lahman database is unavailable. I wonder who &lt;a href=&#34;http://www.baseball-reference.com/minors/player.cgi?id=bryant001kri&#34;&gt;Kris Bryant&lt;/a&gt; would be most similar to? &lt;/p&gt;

&lt;p&gt;&lt;p&gt;What do you mean Baseball Reference doesn&#39;t calculate similarity scores for minor league players?&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;btn btn-success btn-lg btn-block&#34; href=&#34;https://www.youtube.com/watch?v=bnRrvOb0m-I&#34;&gt;As If Button&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;h2&gt;Let&#39;s make our own damn database!&lt;/h2&gt;&lt;/strong&gt;  
&lt;/p&gt;

&lt;p&gt;To make our database we&amp;rsquo;re going to use &lt;a href=&#34;https://github.com/hadley/rvest&#34;&gt;rvest&lt;/a&gt;, an R package designed by Hadley Wickham at RStudio [^1]. The package scrapes HTML from webpages and extracts it into readable data. Let&amp;rsquo;s load the necessary packages and go from there:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#if you haven&#39;t done so already, install rvest from Wickham&#39;s github repository
# install.packages(&amp;quot;devtools&amp;quot;)
# install_github(&amp;quot;hadley/rvest&amp;quot;)
c(&#39;rvest&#39;,&#39;dplyr&#39;) -&amp;gt; packages #installs packages
lapply(packages, library, character.only = T)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The function below will construct each team&#39;s minor league website, for every desired year, and pull out the same table every time.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# prep scraper
url &amp;lt;- &amp;quot;http://www.baseball-reference.com/minors/&amp;quot;
teams=c(&amp;quot;ARI&amp;quot;)
stats_table &amp;lt;- &#39;#team_batting.sortable.stats_table&#39;
stats_id &amp;lt;- paste0(stats_table,&#39; a&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
Let&#39;s start with the Arizona Diamondbacks batting statistics from 2012-2014. We&#39;ll call the data frame we&#39;re about to pull the variable &lt;strong&gt;&#34;minors_batting_ARI&#34;&lt;/strong&gt;. We&#39;re reconstructing the url &lt;code&gt;http://www.baseball-reference.com/minors/affiliate.cgi?id=ARI&amp;year=2014&lt;/code&gt; and instructing the scraper to pull the necessary data table and then repeat the process for next season. We&#39;re calling the pulled data table &#39;df&#39; for simplicity.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;minors_batting_ARI &amp;lt;- data.frame()

  # for loop by teams and seasonfor (teams in teams){ 
  for (season in 2014:2012) {
    html &amp;lt;- paste(url,&amp;quot;affiliate.cgi?id=&amp;quot;,teams,&amp;quot;&amp;amp;year=&amp;quot;,season,sep=&amp;quot;&amp;quot;)

    # batting stats
    read_html(html) %&amp;gt;%
      html_nodes(stats_table) %&amp;gt;%
      html_table(header = T) %&amp;gt;%
      data.frame() %&amp;gt;%
      tbl_df() -&amp;gt; df
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So far our code will scrape the batting table from the team&#39;s minor league page, but we also need to extract each player&#39;s Minor League baseball-reference id using it&#39;s href. Isn&#39;t that right Chris Young? No. Not you, &lt;a href=&#34;http://www.baseball-reference.com/players/y/youngch04.shtml&#34;&gt;Chris Young&lt;/a&gt;. The other, lankier &lt;a href=&#34;http://www.baseball-reference.com/players/y/youngch03.shtml&#34;&gt;Chris Young&lt;/a&gt;. We&#39;re good man, no need to &lt;a href=&#34;http://youtu.be/1EiqELgKp5g?t=56s&#34;&gt;get angry&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This portion of code extracts the attributes of the URL in the table and changes them into characters:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    # player info
    read_html(html) %&amp;gt;%
      html_nodes(stats_id) %&amp;gt;%
      html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; min_playerid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using R formatting code we delete unnecessary rows and create a column called &lt;i&gt;bref_player_id&lt;/i&gt; to assign each player&amp;rsquo;s unique reference id. We&amp;rsquo;re trimming out characters from the href attributes we don&amp;rsquo;t need, leaving only the reference ids.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    # clean dataframe and add team and season info
    df &amp;lt;- df[1:nrow(df),]
    df &amp;lt;- df[!na.omit(df$Rk==&#39;Rk&#39;),]
    df$season &amp;lt;- c(season)
    df$teams &amp;lt;- c(teams)

    # remove url data
    min_playerid=gsub(&amp;quot;/register/player.cgi?id=&amp;quot;, &amp;quot;&amp;quot;, min_playerid,fixed = TRUE)
    df$min_playerid &amp;lt;- c(min_playerid)

    # bind to dataframe
    minors_batting_ARI &amp;lt;- rbind(minors_batting_ARI,df)
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#to view the dataset and save it as a .csv in our working directory
View(minors_batting_ARI)
write.csv(minors_batting_ARI, &amp;quot;minors_batting_ARI.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There we are! Arizona&#39;s minor league batting stats from 2012-2014! 824 instances may seem like too much, for only a three year period, but Baseball-reference.com doesn&#39;t aggregate a player&#39;s statistics by year; they do it by level. Therefore, some players may have multiple rows for the same season (aren&#39;t you glad we pulled out the reference id!) &lt;/p&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;figure&gt;
&lt;img src=&#34;/img/minors_batting_ARI.jpg&#34; class=&#34;img-responsive&#34;&gt;&lt;/figure&gt;&lt;/img&gt;
&lt;/figure&gt;
&lt;/div&gt;


&lt;p&gt;... let&#39;s take a left turn on &lt;a href=&#34;http://hardballtalk.nbcsports.com/2013/01/25/the-diamondbacks-are-travelling-down-grit-avenue-and-guts-boulevard-and-grind-parkway/&#34;&gt;Grind Parkway&lt;/a&gt; and pull in &lt;strong&gt;all MiLB batting statistics for 2014&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;MiLB Batting Stats for All Teams&lt;/h2&gt;

&lt;p&gt;First we&#39;ll need a list of baseball-reference&#39;s team codes. I&#39;ll do the dirty work and include franchise codes for each team since 1969 if you want to play with that data &lt;sup class=&#34;bootstrap-footnote&#34; data-text=&#34;For future investigations be aware that other pages of baseball reference use archived team codes such as MON (Montreal Expos) and CAL (California Angels).&#34;&gt;2&lt;/sup&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;teams=c(&amp;quot;ARI&amp;quot;,&amp;quot;ATL&amp;quot;,&amp;quot;BAL&amp;quot;,&amp;quot;BOS&amp;quot;,&amp;quot;CHC&amp;quot;,&amp;quot;CHW&amp;quot;,&amp;quot;CIN&amp;quot;,&amp;quot;CLE&amp;quot;,&amp;quot;COL&amp;quot;,&amp;quot;DET&amp;quot;,&amp;quot;HOU&amp;quot;,&amp;quot;KCR&amp;quot;,&amp;quot;ANA&amp;quot;,&amp;quot;LAD&amp;quot;,&amp;quot;FLA&amp;quot;,&amp;quot;MIL&amp;quot;,&amp;quot;MIN&amp;quot;,&amp;quot;NYM&amp;quot;,&amp;quot;NYY&amp;quot;,&amp;quot;OAK&amp;quot;,&amp;quot;PHI&amp;quot;,&amp;quot;PIT&amp;quot;,&amp;quot;SDP&amp;quot;,&amp;quot;SFG&amp;quot;,&amp;quot;SEA&amp;quot;,&amp;quot;STL&amp;quot;,&amp;quot;TBD&amp;quot;,&amp;quot;TEX&amp;quot;,&amp;quot;TOR&amp;quot;,&amp;quot;WSN&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;url &amp;lt;- &amp;quot;http://www.baseball-reference.com/minors/&amp;quot;
teams=c(&amp;quot;ARI&amp;quot;,&amp;quot;ATL&amp;quot;,&amp;quot;BAL&amp;quot;,&amp;quot;BOS&amp;quot;,&amp;quot;CHC&amp;quot;,&amp;quot;CHW&amp;quot;,&amp;quot;CIN&amp;quot;,&amp;quot;CLE&amp;quot;,&amp;quot;COL&amp;quot;,&amp;quot;DET&amp;quot;,&amp;quot;HOU&amp;quot;,&amp;quot;KCR&amp;quot;,&amp;quot;ANA&amp;quot;,&amp;quot;LAD&amp;quot;,&amp;quot;FLA&amp;quot;,&amp;quot;MIL&amp;quot;,&amp;quot;MIN&amp;quot;,&amp;quot;NYM&amp;quot;,&amp;quot;NYY&amp;quot;,&amp;quot;OAK&amp;quot;,&amp;quot;PHI&amp;quot;,&amp;quot;PIT&amp;quot;,&amp;quot;SDP&amp;quot;,&amp;quot;SFG&amp;quot;,&amp;quot;SEA&amp;quot;,&amp;quot;STL&amp;quot;,&amp;quot;TBD&amp;quot;,&amp;quot;TEX&amp;quot;,&amp;quot;TOR&amp;quot;,&amp;quot;WSN&amp;quot;)
stats_table &amp;lt;- &#39;#team_batting.sortable.stats_table&#39;
stats_id &amp;lt;- paste0(stats_table,&#39; a&#39;)
minors_batting &amp;lt;- data.frame()

# for loop by teams and season
for (teams in teams){ 
  for (season in 2014:2014) {
    html &amp;lt;- paste(url,&amp;quot;affiliate.cgi?id=&amp;quot;,teams,&amp;quot;&amp;amp;year=&amp;quot;,season,sep=&amp;quot;&amp;quot;)

    # batting stats
    read_html(html) %&amp;gt;%
      html_nodes(stats_table) %&amp;gt;%
      html_table(header = T) %&amp;gt;%
      data.frame() %&amp;gt;%
      tbl_df() -&amp;gt; df

    # player info
    read_html(html) %&amp;gt;%
      html_nodes(stats_id) %&amp;gt;%
      html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; min_playerid

    # clean dataframe and add team and season info
    df &amp;lt;- df[1:nrow(df),]
    df &amp;lt;- df[!na.omit(df$Rk==&#39;Rk&#39;),]
    df$season &amp;lt;- c(season)
    df$teams &amp;lt;- c(teams)

    # remove url data
    min_playerid=gsub(&amp;quot;/register/player.cgi?id=&amp;quot;, &amp;quot;&amp;quot;, min_playerid,fixed = TRUE)
    df$min_playerid &amp;lt;- c(min_playerid)

    # bind to 
    minors_batting &amp;lt;- rbind(minors_batting,df)
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To query other seasons or teams, simply change the information selected. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;teams=c(&amp;quot;OAK&amp;quot;,&amp;quot;TBD&amp;quot;)

stats_table &amp;lt;- &#39;#team_batting.sortable.stats_table&#39;
stats_id &amp;lt;- paste0(stats_table,&#39; a&#39;)
minors_batting &amp;lt;- data.frame()

for (teams in teams){ for (season in 2010:2005) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will pull in minor league batting statistics for Oakland and Tampa Bay for the years 2005-2010.&lt;/p&gt;

&lt;p&gt;Lets clean up all of the stray objects besides the &lt;code&gt;minors_batting&lt;/code&gt; dataframe in our working environment before moving on:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rm(list=setdiff(ls(), &amp;quot;minors_batting&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Obligatory heads up!&lt;/h3&gt;

&lt;p&gt;This code is querying 30 distinct URLs for every season, so multi-season outputs can take some time. Here are my system.time indicators for the above function:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/sys_time_MiLB.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;The query takes about a 1:45 for every league-wide season pull. &lt;strong&gt;Pro-Tip!&lt;/strong&gt; Get that query going and have some breakfast/lunch/dinner.&lt;/p&gt;

&lt;h4&gt;Coming up...&lt;/h4&gt;

&lt;p&gt;Stay tuned to the site for another post about similarity scores and to learn more about Kris Bryant&amp;rsquo;s best comparisons.&lt;/p&gt;

&lt;hr&gt;

&lt;h1&gt;Update (10/3/2017)&lt;/h1&gt;

&lt;p&gt;Baseball Reference has made slight alterations to their website that has deprecated the code above as originally published. An updated version of the scraper code can be found &lt;a href=&#34;/baseballReferenceScraperUpdate.R&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Have feedback, questions, or want to see something else added? Check out my &lt;a href=&#34;https://github.com/mikeleeco/Baseball-Reference-Scrapers&#34;&gt;MiLB Scraper on github&lt;/a&gt; or fork my repository to propose changes.  &lt;a class=&#34;btn btn-primary&#34; href=&#34;https://github.com/mikeleeco/Baseball-Reference-Scrapers/fork&#34;&gt;Edit My Code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>