<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html Scraper on Michael Lee</title>
    <link>/tags/html-scraper/index.xml</link>
    <description>Recent content in Html Scraper on Michael Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>mdlee12@gmail.com (Michael Lee)</managingEditor>
    <webMaster>mdlee12@gmail.com (Michael Lee)</webMaster>
    <atom:link href="/tags/html-scraper/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kris Bryant Performance Projection</title>
      <link>/posts/2015-03-25-bryant-visualization/</link>
      <pubDate>Wed, 25 Mar 2015 00:00:00 +0000</pubDate>
      <author>mdlee12@gmail.com (Michael Lee)</author>
      <guid>/posts/2015-03-25-bryant-visualization/</guid>
      <description>&lt;body&gt;


&lt;div class=&#34;container-fluid&#34;&gt;

&lt;p&gt;A dynamic rCharts visualization displaying performance projections for Kris Bryant based on his 10 most similar career MiLB comparable players. Read more at &lt;a href=&#34;http://mikelee.co/posts/milb-similarity-scores/&#34; class=&#34;uri&#34;&gt;http://mikelee.co/posts/milb-similarity-scores/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can change the y-axis parameters by selecting the performance measure youâ€™d like to visualize. Additionally, hover over the points to see player details, and select players in the legend to show or remove their data from the graph.&lt;/p&gt;
&lt;iframe src=&#34;/knitr/bryant.html&#34; , width=&#34;100%,&#34; height=&#34;550px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;
&lt;div class=&#34;table-responsive&#34;&gt;
&lt;table class=&#34;table table-hover&#34;&gt;
&lt;th&gt;
Year
&lt;/th&gt;
&lt;th&gt;
Age
&lt;/th&gt;
&lt;th&gt;
LevEq
&lt;/th&gt;
&lt;th&gt;
G
&lt;/th&gt;
&lt;th&gt;
PA
&lt;/th&gt;
&lt;th&gt;
AB
&lt;/th&gt;
&lt;th&gt;
R
&lt;/th&gt;
&lt;th&gt;
H
&lt;/th&gt;
&lt;th&gt;
X2B
&lt;/th&gt;
&lt;th&gt;
X3B
&lt;/th&gt;
&lt;th&gt;
HR
&lt;/th&gt;
&lt;th&gt;
RBI
&lt;/th&gt;
&lt;th&gt;
SB
&lt;/th&gt;
&lt;th&gt;
CS
&lt;/th&gt;
&lt;th&gt;
BB
&lt;/th&gt;
&lt;th&gt;
SO
&lt;/th&gt;
&lt;th&gt;
BA
&lt;/th&gt;
&lt;th&gt;
OBP
&lt;/th&gt;
&lt;th&gt;
SLG
&lt;/th&gt;
&lt;th&gt;
OPS
&lt;/th&gt;
&lt;th&gt;
Count
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2015
&lt;/td&gt;
&lt;td&gt;
23
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
130
&lt;/td&gt;
&lt;td&gt;
548
&lt;/td&gt;
&lt;td&gt;
489
&lt;/td&gt;
&lt;td&gt;
76
&lt;/td&gt;
&lt;td&gt;
138
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;td&gt;
24
&lt;/td&gt;
&lt;td&gt;
83
&lt;/td&gt;
&lt;td&gt;
9
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
47
&lt;/td&gt;
&lt;td&gt;
105
&lt;/td&gt;
&lt;td&gt;
0.282
&lt;/td&gt;
&lt;td&gt;
0.35
&lt;/td&gt;
&lt;td&gt;
0.515
&lt;/td&gt;
&lt;td&gt;
0.865
&lt;/td&gt;
&lt;td&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2016
&lt;/td&gt;
&lt;td&gt;
24
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
132
&lt;/td&gt;
&lt;td&gt;
551
&lt;/td&gt;
&lt;td&gt;
492
&lt;/td&gt;
&lt;td&gt;
77
&lt;/td&gt;
&lt;td&gt;
140
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;td&gt;
23
&lt;/td&gt;
&lt;td&gt;
77
&lt;/td&gt;
&lt;td&gt;
8
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
49
&lt;/td&gt;
&lt;td&gt;
107
&lt;/td&gt;
&lt;td&gt;
0.285
&lt;/td&gt;
&lt;td&gt;
0.354
&lt;/td&gt;
&lt;td&gt;
0.51
&lt;/td&gt;
&lt;td&gt;
0.864
&lt;/td&gt;
&lt;td&gt;
9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2017
&lt;/td&gt;
&lt;td&gt;
25
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
115
&lt;/td&gt;
&lt;td&gt;
476
&lt;/td&gt;
&lt;td&gt;
424
&lt;/td&gt;
&lt;td&gt;
66
&lt;/td&gt;
&lt;td&gt;
121
&lt;/td&gt;
&lt;td&gt;
26
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
20
&lt;/td&gt;
&lt;td&gt;
72
&lt;/td&gt;
&lt;td&gt;
7
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
43
&lt;/td&gt;
&lt;td&gt;
89
&lt;/td&gt;
&lt;td&gt;
0.285
&lt;/td&gt;
&lt;td&gt;
0.356
&lt;/td&gt;
&lt;td&gt;
0.502
&lt;/td&gt;
&lt;td&gt;
0.859
&lt;/td&gt;
&lt;td&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2018
&lt;/td&gt;
&lt;td&gt;
26
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
129
&lt;/td&gt;
&lt;td&gt;
543
&lt;/td&gt;
&lt;td&gt;
478
&lt;/td&gt;
&lt;td&gt;
76
&lt;/td&gt;
&lt;td&gt;
135
&lt;/td&gt;
&lt;td&gt;
31
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
22
&lt;/td&gt;
&lt;td&gt;
73
&lt;/td&gt;
&lt;td&gt;
7
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
56
&lt;/td&gt;
&lt;td&gt;
93
&lt;/td&gt;
&lt;td&gt;
0.282
&lt;/td&gt;
&lt;td&gt;
0.363
&lt;/td&gt;
&lt;td&gt;
0.498
&lt;/td&gt;
&lt;td&gt;
0.861
&lt;/td&gt;
&lt;td&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2019
&lt;/td&gt;
&lt;td&gt;
27
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
148
&lt;/td&gt;
&lt;td&gt;
635
&lt;/td&gt;
&lt;td&gt;
569
&lt;/td&gt;
&lt;td&gt;
92
&lt;/td&gt;
&lt;td&gt;
169
&lt;/td&gt;
&lt;td&gt;
36
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
28
&lt;/td&gt;
&lt;td&gt;
94
&lt;/td&gt;
&lt;td&gt;
15
&lt;/td&gt;
&lt;td&gt;
6
&lt;/td&gt;
&lt;td&gt;
58
&lt;/td&gt;
&lt;td&gt;
104
&lt;/td&gt;
&lt;td&gt;
0.297
&lt;/td&gt;
&lt;td&gt;
0.365
&lt;/td&gt;
&lt;td&gt;
0.522
&lt;/td&gt;
&lt;td&gt;
0.887
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2020
&lt;/td&gt;
&lt;td&gt;
28
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
151
&lt;/td&gt;
&lt;td&gt;
647
&lt;/td&gt;
&lt;td&gt;
574
&lt;/td&gt;
&lt;td&gt;
87
&lt;/td&gt;
&lt;td&gt;
174
&lt;/td&gt;
&lt;td&gt;
38
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
25
&lt;/td&gt;
&lt;td&gt;
94
&lt;/td&gt;
&lt;td&gt;
11
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
64
&lt;/td&gt;
&lt;td&gt;
109
&lt;/td&gt;
&lt;td&gt;
0.303
&lt;/td&gt;
&lt;td&gt;
0.376
&lt;/td&gt;
&lt;td&gt;
0.51
&lt;/td&gt;
&lt;td&gt;
0.886
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2021
&lt;/td&gt;
&lt;td&gt;
29
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
127
&lt;/td&gt;
&lt;td&gt;
532
&lt;/td&gt;
&lt;td&gt;
475
&lt;/td&gt;
&lt;td&gt;
70
&lt;/td&gt;
&lt;td&gt;
130
&lt;/td&gt;
&lt;td&gt;
26
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
20
&lt;/td&gt;
&lt;td&gt;
77
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
47
&lt;/td&gt;
&lt;td&gt;
96
&lt;/td&gt;
&lt;td&gt;
0.274
&lt;/td&gt;
&lt;td&gt;
0.343
&lt;/td&gt;
&lt;td&gt;
0.472
&lt;/td&gt;
&lt;td&gt;
0.815
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2022
&lt;/td&gt;
&lt;td&gt;
30
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
143
&lt;/td&gt;
&lt;td&gt;
591
&lt;/td&gt;
&lt;td&gt;
525
&lt;/td&gt;
&lt;td&gt;
81
&lt;/td&gt;
&lt;td&gt;
141
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
21
&lt;/td&gt;
&lt;td&gt;
81
&lt;/td&gt;
&lt;td&gt;
10
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
56
&lt;/td&gt;
&lt;td&gt;
104
&lt;/td&gt;
&lt;td&gt;
0.269
&lt;/td&gt;
&lt;td&gt;
0.345
&lt;/td&gt;
&lt;td&gt;
0.461
&lt;/td&gt;
&lt;td&gt;
0.806
&lt;/td&gt;
&lt;td&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2023
&lt;/td&gt;
&lt;td&gt;
31
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
159
&lt;/td&gt;
&lt;td&gt;
696
&lt;/td&gt;
&lt;td&gt;
620
&lt;/td&gt;
&lt;td&gt;
98
&lt;/td&gt;
&lt;td&gt;
163
&lt;/td&gt;
&lt;td&gt;
28
&lt;/td&gt;
&lt;td&gt;
6
&lt;/td&gt;
&lt;td&gt;
30
&lt;/td&gt;
&lt;td&gt;
93
&lt;/td&gt;
&lt;td&gt;
9
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
64
&lt;/td&gt;
&lt;td&gt;
120
&lt;/td&gt;
&lt;td&gt;
0.263
&lt;/td&gt;
&lt;td&gt;
0.336
&lt;/td&gt;
&lt;td&gt;
0.473
&lt;/td&gt;
&lt;td&gt;
0.808
&lt;/td&gt;
&lt;td&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2024
&lt;/td&gt;
&lt;td&gt;
32
&lt;/td&gt;
&lt;td&gt;
4
&lt;/td&gt;
&lt;td&gt;
118
&lt;/td&gt;
&lt;td&gt;
440
&lt;/td&gt;
&lt;td&gt;
380
&lt;/td&gt;
&lt;td&gt;
48
&lt;/td&gt;
&lt;td&gt;
93
&lt;/td&gt;
&lt;td&gt;
22
&lt;/td&gt;
&lt;td&gt;
1
&lt;/td&gt;
&lt;td&gt;
14
&lt;/td&gt;
&lt;td&gt;
63
&lt;/td&gt;
&lt;td&gt;
3
&lt;/td&gt;
&lt;td&gt;
1
&lt;/td&gt;
&lt;td&gt;
46
&lt;/td&gt;
&lt;td&gt;
60
&lt;/td&gt;
&lt;td&gt;
0.245
&lt;/td&gt;
&lt;td&gt;
0.327
&lt;/td&gt;
&lt;td&gt;
0.418
&lt;/td&gt;
&lt;td&gt;
0.745
&lt;/td&gt;
&lt;td&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Be sure to bookmark my site to check out future visualizations!&lt;/p&gt;


&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
$(document).ready(function () {
  $(&#39;tr.header&#39;).parent(&#39;thead&#39;).parent(&#39;table&#39;).addClass(&#39;table table-condensed&#39;);
});

&lt;/script&gt;

&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement(&#34;script&#34;);
    script.type = &#34;text/javascript&#34;;
    script.src  = &#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;;
    document.getElementsByTagName(&#34;head&#34;)[0].appendChild(script);
  })();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s Make a Minor League Baseball Database!</title>
      <link>/posts/2015-02-23-milb-scraper-with-rvest/</link>
      <pubDate>Mon, 23 Feb 2015 00:00:00 +0000</pubDate>
      <author>mdlee12@gmail.com (Michael Lee)</author>
      <guid>/posts/2015-02-23-milb-scraper-with-rvest/</guid>
      <description>&lt;p&gt;
Baseball is a game of numbers, some more accessible than others. Rates, averages, linear weights, aging curves, and WAR are only a few of the myriad statistics influencing decision makers in MLB franchises. An endless amount of data is accessible to the average fan at many sites, most notably the &lt;a href=&#34;http://www.seanlahman.com/baseball-archive/statistics/&#34;&gt;Lahman Baseball Database&lt;/a&gt;, which is the most robust catalog of MLB player statistics available to the public.
&lt;/p&gt;
&lt;p&gt;
One area of relatively limited accessibility to the average fan is statistics for Minor League players. Though player statistics by position, year, and team are available at many sites, a thorough catalog of MiLB data akin to the Lahman database is unavailable. I wonder who &lt;a href=&#34;http://www.baseball-reference.com/minors/player.cgi?id=bryant001kri&#34;&gt;Kris Bryant&lt;/a&gt; would be most similar to? &lt;/p&gt;

&lt;p&gt;&lt;p&gt;What do you mean Baseball Reference doesn&#39;t calculate similarity scores for minor league players?&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;btn btn-success btn-lg btn-block&#34; href=&#34;https://www.youtube.com/watch?v=bnRrvOb0m-I&#34;&gt;As If Button&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;h2&gt;Let&#39;s make our own damn database!&lt;/h2&gt;&lt;/strong&gt;  
&lt;/p&gt;

&lt;p&gt;To make our database we&amp;rsquo;re going to use &lt;a href=&#34;https://github.com/hadley/rvest&#34;&gt;rvest&lt;/a&gt;, an R package designed by Hadley Wickham at RStudio [^1]. The package scrapes HTML from webpages and extracts it into readable data. Let&amp;rsquo;s load the necessary packages and go from there:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#if you haven&#39;t done so already, install rvest from Wickham&#39;s github repository
# install.packages(&amp;quot;devtools&amp;quot;)
# install_github(&amp;quot;hadley/rvest&amp;quot;)
c(&#39;rvest&#39;,&#39;dplyr&#39;) -&amp;gt; packages #installs packages
lapply(packages, library, character.only = T)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The function below will construct each team&#39;s minor league website, for every desired year, and pull out the same table every time.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# prep scraper
url &amp;lt;- &amp;quot;http://www.baseball-reference.com/minors/&amp;quot;
teams=c(&amp;quot;ARI&amp;quot;)
stats_table &amp;lt;- &#39;#team_batting.sortable.stats_table&#39;
stats_id &amp;lt;- paste0(stats_table,&#39; a&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
Let&#39;s start with the Arizona Diamondbacks batting statistics from 2012-2014. We&#39;ll call the data frame we&#39;re about to pull the variable &lt;strong&gt;&#34;minors_batting_ARI&#34;&lt;/strong&gt;. We&#39;re reconstructing the url &lt;code&gt;http://www.baseball-reference.com/minors/affiliate.cgi?id=ARI&amp;year=2014&lt;/code&gt; and instructing the scraper to pull the necessary data table and then repeat the process for next season. We&#39;re calling the pulled data table &#39;df&#39; for simplicity.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;minors_batting_ARI &amp;lt;- data.frame()

  # for loop by teams and seasonfor (teams in teams){ 
  for (season in 2014:2012) {
    html &amp;lt;- paste(url,&amp;quot;affiliate.cgi?id=&amp;quot;,teams,&amp;quot;&amp;amp;year=&amp;quot;,season,sep=&amp;quot;&amp;quot;)

    # batting stats
    read_html(html) %&amp;gt;%
      html_nodes(stats_table) %&amp;gt;%
      html_table(header = T) %&amp;gt;%
      data.frame() %&amp;gt;%
      tbl_df() -&amp;gt; df
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So far our code will scrape the batting table from the team&#39;s minor league page, but we also need to extract each player&#39;s Minor League baseball-reference id using it&#39;s href. Isn&#39;t that right Chris Young? No. Not you, &lt;a href=&#34;http://www.baseball-reference.com/players/y/youngch04.shtml&#34;&gt;Chris Young&lt;/a&gt;. The other, lankier &lt;a href=&#34;http://www.baseball-reference.com/players/y/youngch03.shtml&#34;&gt;Chris Young&lt;/a&gt;. We&#39;re good man, no need to &lt;a href=&#34;http://youtu.be/1EiqELgKp5g?t=56s&#34;&gt;get angry&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This portion of code extracts the attributes of the URL in the table and changes them into characters:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    # player info
    read_html(html) %&amp;gt;%
      html_nodes(stats_id) %&amp;gt;%
      html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; min_playerid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using R formatting code we delete unnecessary rows and create a column called &lt;i&gt;bref_player_id&lt;/i&gt; to assign each player&amp;rsquo;s unique reference id. We&amp;rsquo;re trimming out characters from the href attributes we don&amp;rsquo;t need, leaving only the reference ids.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    # clean dataframe and add team and season info
    df &amp;lt;- df[1:nrow(df),]
    df &amp;lt;- df[!na.omit(df$Rk==&#39;Rk&#39;),]
    df$season &amp;lt;- c(season)
    df$teams &amp;lt;- c(teams)

    # remove url data
    min_playerid=gsub(&amp;quot;/register/player.cgi?id=&amp;quot;, &amp;quot;&amp;quot;, min_playerid,fixed = TRUE)
    df$min_playerid &amp;lt;- c(min_playerid)

    # bind to dataframe
    minors_batting_ARI &amp;lt;- rbind(minors_batting_ARI,df)
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#to view the dataset and save it as a .csv in our working directory
View(minors_batting_ARI)
write.csv(minors_batting_ARI, &amp;quot;minors_batting_ARI.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There we are! Arizona&#39;s minor league batting stats from 2012-2014! 824 instances may seem like too much, for only a three year period, but Baseball-reference.com doesn&#39;t aggregate a player&#39;s statistics by year; they do it by level. Therefore, some players may have multiple rows for the same season (aren&#39;t you glad we pulled out the reference id!) &lt;/p&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;figure&gt;
&lt;img src=&#34;/img/minors_batting_ARI.jpg&#34; class=&#34;img-responsive&#34;&gt;&lt;/figure&gt;&lt;/img&gt;
&lt;/figure&gt;
&lt;/div&gt;


&lt;p&gt;... let&#39;s take a left turn on &lt;a href=&#34;http://hardballtalk.nbcsports.com/2013/01/25/the-diamondbacks-are-travelling-down-grit-avenue-and-guts-boulevard-and-grind-parkway/&#34;&gt;Grind Parkway&lt;/a&gt; and pull in &lt;strong&gt;all MiLB batting statistics for 2014&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;MiLB Batting Stats for All Teams&lt;/h2&gt;

&lt;p&gt;First we&#39;ll need a list of baseball-reference&#39;s team codes. I&#39;ll do the dirty work and include franchise codes for each team since 1969 if you want to play with that data &lt;sup class=&#34;bootstrap-footnote&#34; data-text=&#34;For future investigations be aware that other pages of baseball reference use archived team codes such as MON (Montreal Expos) and CAL (California Angels).&#34;&gt;2&lt;/sup&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;teams=c(&amp;quot;ARI&amp;quot;,&amp;quot;ATL&amp;quot;,&amp;quot;BAL&amp;quot;,&amp;quot;BOS&amp;quot;,&amp;quot;CHC&amp;quot;,&amp;quot;CHW&amp;quot;,&amp;quot;CIN&amp;quot;,&amp;quot;CLE&amp;quot;,&amp;quot;COL&amp;quot;,&amp;quot;DET&amp;quot;,&amp;quot;HOU&amp;quot;,&amp;quot;KCR&amp;quot;,&amp;quot;ANA&amp;quot;,&amp;quot;LAD&amp;quot;,&amp;quot;FLA&amp;quot;,&amp;quot;MIL&amp;quot;,&amp;quot;MIN&amp;quot;,&amp;quot;NYM&amp;quot;,&amp;quot;NYY&amp;quot;,&amp;quot;OAK&amp;quot;,&amp;quot;PHI&amp;quot;,&amp;quot;PIT&amp;quot;,&amp;quot;SDP&amp;quot;,&amp;quot;SFG&amp;quot;,&amp;quot;SEA&amp;quot;,&amp;quot;STL&amp;quot;,&amp;quot;TBD&amp;quot;,&amp;quot;TEX&amp;quot;,&amp;quot;TOR&amp;quot;,&amp;quot;WSN&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;url &amp;lt;- &amp;quot;http://www.baseball-reference.com/minors/&amp;quot;
teams=c(&amp;quot;ARI&amp;quot;,&amp;quot;ATL&amp;quot;,&amp;quot;BAL&amp;quot;,&amp;quot;BOS&amp;quot;,&amp;quot;CHC&amp;quot;,&amp;quot;CHW&amp;quot;,&amp;quot;CIN&amp;quot;,&amp;quot;CLE&amp;quot;,&amp;quot;COL&amp;quot;,&amp;quot;DET&amp;quot;,&amp;quot;HOU&amp;quot;,&amp;quot;KCR&amp;quot;,&amp;quot;ANA&amp;quot;,&amp;quot;LAD&amp;quot;,&amp;quot;FLA&amp;quot;,&amp;quot;MIL&amp;quot;,&amp;quot;MIN&amp;quot;,&amp;quot;NYM&amp;quot;,&amp;quot;NYY&amp;quot;,&amp;quot;OAK&amp;quot;,&amp;quot;PHI&amp;quot;,&amp;quot;PIT&amp;quot;,&amp;quot;SDP&amp;quot;,&amp;quot;SFG&amp;quot;,&amp;quot;SEA&amp;quot;,&amp;quot;STL&amp;quot;,&amp;quot;TBD&amp;quot;,&amp;quot;TEX&amp;quot;,&amp;quot;TOR&amp;quot;,&amp;quot;WSN&amp;quot;)
stats_table &amp;lt;- &#39;#team_batting.sortable.stats_table&#39;
stats_id &amp;lt;- paste0(stats_table,&#39; a&#39;)
minors_batting &amp;lt;- data.frame()

# for loop by teams and season
for (teams in teams){ 
  for (season in 2014:2014) {
    html &amp;lt;- paste(url,&amp;quot;affiliate.cgi?id=&amp;quot;,teams,&amp;quot;&amp;amp;year=&amp;quot;,season,sep=&amp;quot;&amp;quot;)

    # batting stats
    read_html(html) %&amp;gt;%
      html_nodes(stats_table) %&amp;gt;%
      html_table(header = T) %&amp;gt;%
      data.frame() %&amp;gt;%
      tbl_df() -&amp;gt; df

    # player info
    read_html(html) %&amp;gt;%
      html_nodes(stats_id) %&amp;gt;%
      html_attr(name=&amp;quot;href&amp;quot;) %&amp;gt;% unlist %&amp;gt;% as.character -&amp;gt; min_playerid

    # clean dataframe and add team and season info
    df &amp;lt;- df[1:nrow(df),]
    df &amp;lt;- df[!na.omit(df$Rk==&#39;Rk&#39;),]
    df$season &amp;lt;- c(season)
    df$teams &amp;lt;- c(teams)

    # remove url data
    min_playerid=gsub(&amp;quot;/register/player.cgi?id=&amp;quot;, &amp;quot;&amp;quot;, min_playerid,fixed = TRUE)
    df$min_playerid &amp;lt;- c(min_playerid)

    # bind to 
    minors_batting &amp;lt;- rbind(minors_batting,df)
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To query other seasons or teams, simply change the information selected. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;teams=c(&amp;quot;OAK&amp;quot;,&amp;quot;TBD&amp;quot;)

stats_table &amp;lt;- &#39;#team_batting.sortable.stats_table&#39;
stats_id &amp;lt;- paste0(stats_table,&#39; a&#39;)
minors_batting &amp;lt;- data.frame()

for (teams in teams){ for (season in 2010:2005) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will pull in minor league batting statistics for Oakland and Tampa Bay for the years 2005-2010.&lt;/p&gt;

&lt;p&gt;Lets clean up all of the stray objects besides the &lt;code&gt;minors_batting&lt;/code&gt; dataframe in our working environment before moving on:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rm(list=setdiff(ls(), &amp;quot;minors_batting&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Obligatory heads up!&lt;/h3&gt;

&lt;p&gt;This code is querying 30 distinct URLs for every season, so multi-season outputs can take some time. Here are my system.time indicators for the above function:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/sys_time_MiLB.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;The query takes about a 1:45 for every league-wide season pull. &lt;strong&gt;Pro-Tip!&lt;/strong&gt; Get that query going and have some breakfast/lunch/dinner.&lt;/p&gt;

&lt;h4&gt;Coming up...&lt;/h4&gt;

&lt;p&gt;Stay tuned to the site for another post about similarity scores and to learn more about Kris Bryant&amp;rsquo;s best comparisons.&lt;/p&gt;

&lt;hr&gt;

&lt;h1&gt;Update (10/3/2017)&lt;/h1&gt;

&lt;p&gt;Baseball Reference has made slight alterations to their website that has deprecated the code above as originally published. An updated version of the scraper code can be found &lt;a href=&#34;/baseballReferenceScraperUpdate.R/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Have feedback, questions, or want to see something else added? Check out my &lt;a href=&#34;https://github.com/mikeleeco/Baseball-Reference-Scrapers&#34;&gt;MiLB Scraper on github&lt;/a&gt; or fork my repository to propose changes.  &lt;a class=&#34;btn btn-primary&#34; href=&#34;https://github.com/mikeleeco/Baseball-Reference-Scrapers/fork&#34;&gt;Edit My Code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>