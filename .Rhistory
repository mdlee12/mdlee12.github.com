min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier)), show.legend = NA) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
View(wrPlot)
wrPlot
tePlot
wrPlot
rbPlot
rbPlot <- linePlot(rb[10:40,])
rbPlot
wrPlot <- linePlot(wr[10:40,])
wrPlot
wrPlot <- linePlot(wr[5:40,])
wrPlot
rbPlot
wrPlot
wrPlot
wrPlot <- linePlot(wr[10:40,])
wrPlot
tePlot
tePlot <- linePlot(te[10:40,])
tePlot
tePlot <- linePlot(te[6:40,])
tePlot
wrPlot
wrPlot <- linePlot(wr[15:40,])
wrPlot
wrPlot <- linePlot(wr[20:40,])
wrPlot
wrPlot <- linePlot(wr[25:40,])
wrPlot
rbPlot
qbPlot
qbPlot
wrPlot
wrPlot <- linePlot(wr[20:60,])
wrPlot
wrPlot <- linePlot(wr[40:60,])
wrPlot
dst
linePlot(dst[40:60,])
View(dst)
linePlot(dst)
rbPlot
linePlot(rb[20:50,])
k
View(k)
8*12
11*12
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
View(custom)
View(rbPlot)
View(wrPlot)
wrPlot
View(qbPlot)
qbPlot
wrPlot
rbPlot
rbPlot <- linePlot(rb[10:40,])
wrPlot <- linePlot(wr[10:40,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
rbPlot
rbPlot <- linePlot(rb[20:40,])
wrPlot <- linePlot(wr[10:40,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
rbPlot <- linePlot(rb[25:40,])
wrPlot <- linePlot(wr[20:40,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
wrPlot
rbPlot
rbPlot <- linePlot(rb[25:50,])
wrPlot <- linePlot(wr[20:50,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
rbPlot <- linePlot(rb[32:50,])
wrPlot <- linePlot(wr[20:50,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
wrPlot
qbPlot
tePlot
rbPlot <- linePlot(rb[32:50,])
wrPlot <- linePlot(wr[30:50,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
wrPlot
View(dst)
dst
rbPlot
x = letters
x[x %in% name] <- letters[rank(letters) - 3]
substring(rep("moses", 5), c(1:nchar(name)),c(1:nchar(name)))
letters2 <- c(letters[4:26],letters[1:3])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
letters
scram("fumble")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
print(name)
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fumble")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
print(name)
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
print(name2)
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fumble")
letters2 <- c(letters[2:26],letters[1])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
print(name)
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
print(name2)
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fumble")
scram("tackling")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("tackling")
scram("caught")
scram("tackled")
scram("stripped")
scram("running")
letters2 <- c(letters[26],letters[1:25])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("running")
scram("tackled")
scram("fumbled")
563/3.4
563/3.4/12
563/2
563/2/12
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
install.packages("pdftools")
library(pdftools)
library(magick)
setwd(paste0(getwd(), "/cflImages"))
pdf <- image_read_pdf("ES.pdf", pages = 1, density = 100)
getwd()
pdf <- image_read_pdf("/home/michael/Documents/ES.pdf", pages = 1, density = 100)
install.packages("pdftools")
library(pdftools)
library(magick)
pdf <- image_read_pdf("ES.pdf", pages = 1, density = 100)
pdf <- image_read_pdf("/home/michael/Documents/ES.pdf", pages = 1, density = 100)
pdf <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = 1, density = 100)
m <- magick::image_read(pdf[1])
pdfList <- as.list()
for(i in 1:8) {
pdfList[i] <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = i, density = 100)
}
pdfList
pdfList <- as.list()
pdfList <- list()
pdfList <- list()
for(i in 1:8) {
pdfList[i] <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = i, density = 100)
}
pdfList <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = 1, density = 100)
pdfList <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = 2, density = 100)
pdfList <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = 1, density = 100)
pdfList2 <- image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = 2, density = 100)
for (i in c(pdfList, pdfList2))
m <- c(m, magick::image_read(i))
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
for (i in c(pdfList, pdfList2))
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
for (i in c(pdfList, pdfList2)) {
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
}
for (i %iN% c(pdfList, pdfList2)) {
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
}
for (i %in% c(pdfList, pdfList2)) {
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
}
for (c(pdfList, pdfList2)) {
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
}
for(c(pdfList, pdfList2)) {
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
}
for(1 %in% c(pdfList, pdfList2)) {
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
}
for(1 %in% c(pdfList, pdfList2))
m <- i
m <- magick::image_animate(m, fps = .5,  dispose = "previous")
magick::image_write(m, "movie.gif")
c(pdfList, pdfList2)
dev.off()
m <- magick::image_animate(c(pdfList, pdfList2), fps = .5,  dispose = "previous")
magick::image_write(m, "movieTest.gif")
getwd()
pdfList <- c()
for(i in 1:8) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = i, density = 100))
}
m <- magick::image_animate(pdfList, fps = .5,  dispose = "previous")
magick::image_write(m, "movieTest.gif")
m <- magick::image_animate(unlist(pdfList), fps = .5,  dispose = "previous")
magick::image_write(m, "movieTest.gif")
pdfList
unlist(pdfList)
c(pdfList)
as.vector(pdfList)
library(purrr)
as_vector(pdfList)
simplify(pdfList)
class(pdfList)
pdfList <- data.frame()
for(i in 1:8) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = i, density = 100))
}
pdfList
length(pdfList)
unlist(unlist(pdfList))
pdfList[[1]]
c(pdfList[[1]],pdfList[[2]])
paste0(pdfList)
paste0(pdfList)
unlist(pdfList, use.names=FALSE)
magick::image_apply(pdfList)
sapply(pdfList, unlist)
magick::image_write(sapply(pdfList, unlist), "movieTest.gif")
magick::image_write(image_animate(sapply(pdfList, unlist)t, fps = .5,  dispose = "previous"), "movieTest.gif")
magick::image_write(magick::image_animate(sapply(pdfList, unlist), fps = .5,  dispose = "previous"), "movieTest.gif")
magick::image_animate(sapply(pdfList, unlist), fps = .5,  dispose = "previous")
magick::image_animate(pdfList, fps = .5,  dispose = "previous")
pdfList <- c()
for(i in 1:8) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/ES.pdf", pages = i, density = 100))
}
for(i in 1:8) {
m <- magick::image_animate(pdfList[i], fps = .5,  dispose = "previous")}
pdfList[i]
dput(pdfList)
magick::image_write(dput(pdfList), "movieTest.gif")
magick::image_write(c(pdfList), "movieTest.gif")
magick::image_write(unlist(pdfList), "movieTest.gif")
magick::image_write((pdfList[[1]]), "movieTest.gif")
magick::image_write((pdfList[[1]]), "movieTest.gif")
magick::image_write(c(pdfList[[1]], pdfList[[2]]), "movieTest.gif")
for(i in 1:8) {
m <- magick::image_animate(dput(pdfList), fps = .5,  dispose = "previous")
}
magick::image_write(m, "movieTest.gif")
dput(pdfList)
pdfList[[1]]
for(i in 1:8) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]]), fps = .5,  dispose = "previous")
}
magick::image_write(m, "movieTest.gif")
pdfList <- c()
for(i in 1:8) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/cflShell.pdf", pages = i, density = 100))
}
for(i in 1:8) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "cflShell.gif")
pdfList <- c()
for(i in 1:8) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/SmithValleySchoolsElementary56.pdf", pages = i, density = 100))
}
for(i in 1:8) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "nevadaShell.gif")
for(i in 1:10) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]], pdfList[[9]], pdfList[[10]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "nevadaShell.gif")
pdfList <- c()
for(i in 1:10) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/SmithValleySchoolsElementary56.pdf", pages = i, density = 100))
}
for(i in 1:8) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "nevadaShell.gif")
pdfList <- c()
for(i in 1:10) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/SmithValleySchoolsElementary56.pdf", pages = i, density = 100))
}
for(i in 1:10) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]], pdfList[[9]], pdfList[[10]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "nevadaShell.gif")
# previous
pdfList <- c()
for(i in 1:9) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/SmithValleySchoolsElementary56.pdf", pages = i, density = 100))
}
for(i in 1:9) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]], pdfList[[9]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "nevadaOriginal.gif")
pdfList <- c()
for(i in 1:9) {
pdfList <- c(pdfList, image_read_pdf("/home/michael/Documents/cflImages/Lovelock_Elementary_School.pdf", pages = i, density = 100))
}
for(i in 1:9) {
m <- magick::image_animate(c(pdfList[[1]], pdfList[[2]], pdfList[[3]], pdfList[[4]],pdfList[[5]], pdfList[[6]], pdfList[[7]], pdfList[[8]], pdfList[[9]]),
fps = .5,  dispose = "previous")
}
magick::image_write(m, "nevadaShell.gif")
