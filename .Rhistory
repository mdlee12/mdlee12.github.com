library(extrafont)
extrafont::loadfonts()
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d$colour <- 'green'
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d2$colour <- 'goldenrod'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d3$colour <- 'steelblue'
df <- list(d, d2, d3)
tf <- tween_states(df, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out'
),
nframes = 375)
library(tweenr)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d$colour <- 'green'
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d2$colour <- 'goldenrod'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d3$colour <- 'steelblue'
df <- list(d, d2, d3)
tf <- tween_states(df, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out'
),
nframes = 375)
t <- data.frame(x=0, y=0, colour = 'forestgreen', size=1, alpha = 1,
stringsAsFactors = FALSE)
t2 <- t
t$colour <- 'green'
t2$time <- d$time + 10
t2$alpha <- 1
t2$size <- 3
t2$ease <- 'linear'
t2$colour <- 'goldenrod'
t3 <- t2
t3$time <- t2$time + sample(50:100, 20)
t3$size = 10
t3$ease <- 'bounce-out'
t3$colour <- 'steelblue'
df <- list(t, t2, t3)
tf <- tween_states(df, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out'
),
nframes = 375)
t <- data.frame(x=0, y=0, colour = 'forestgreen', size=1, alpha = 1,
stringsAsFactors = FALSE)
t <- t[rep(1, 12),]
t$alpha[2:12] <- 0
t2 <- t
t2$y <- 1
t2$colour <- 'firebrick'
t3 <- t2
t3$x <- 1
t3$colour <- 'steelblue'
t4 <- t3
t4$y <- 0
t4$colour <- 'goldenrod'
ts <- list(t, t2, t3, t4)
tf <- tween_states(ts, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out',
'cubic-out'),
nframes = 375)
hex <- ggplot(data=tf, aes(x=x, y=y)) +
geom_text(aes(label = label, frame = .frame), data=tweenlogo, size = 13) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
annotate("text", x = max(hexdat$x)/2, y = max(hexdat$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 65,family = "Open Sans Bold") +
annotate("text", x = max(hexdat$x)/2, y = max(hexdat$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 65.5,family = "Open Sans Bold")
library(ggplot2)
hex <- ggplot(data=tf, aes(x=x, y=y)) +
geom_text(aes(label = label, frame = .frame), data=tweenlogo, size = 13) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
annotate("text", x = max(hexdat$x)/2, y = max(hexdat$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 65,family = "Open Sans Bold") +
annotate("text", x = max(hexdat$x)/2, y = max(hexdat$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 65.5,family = "Open Sans Bold")
hex <- ggplot(data=tf, aes(x=x, y=y)) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
annotate("text", x = max(hexdat$x)/2, y = max(hexdat$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 65,family = "Open Sans Bold") +
annotate("text", x = max(hexdat$x)/2, y = max(hexdat$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 65.5,family = "Open Sans Bold")
hex <- ggplot(data=tf, aes(x=x, y=y)) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
annotate("text", x = max(tf$x)/2, y = max(tf$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 65,family = "Open Sans Bold") +
annotate("text", x = max(tf$x)/2, y = max(tf$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 65.5,family = "Open Sans Bold")
hex
hex <- ggplot(data=tf, aes(x=x, y=y)) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
annotate("text", x = max(tf$x)/2, y = max(tf$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 65,family = "Open Sans Bold") +
annotate("text", x = max(tf$x)/2, y = max(tf$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 65.5,family = "Open Sans Bold") +
scale_colour_identity() +
scale_alpha(range = c(0, 1), guide = 'none') +
scale_size(range = c(4, 60), guide = 'none') +
expand_limits(x=c(-0.36, 1.36), y=c(-0.36, 1.36)) +
theme_bw()
hex
t <- data.frame(x=0, y=0, colour = 'forestgreen', size=1, alpha = 1,
stringsAsFactors = FALSE)
t <- t[rep(1, 2),]
t$alpha[.1:1] <- 0
t2 <- t
t2$y <- .5
t2$colour <- 'firebrick'
t3 <- t2
t3$x <- 0
t3$colour <- 'steelblue'
t4 <- t3
t4$y <- 1
t4$colour <- 'goldenrod'
ts <- list(t, t2, t3, t4)
tf <- tween_states(ts, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out',
'cubic-out'),
nframes = 375)
hex <- ggplot(data=tf, aes(x=x, y=y)) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
annotate("text", x = max(tf$x)/2, y = max(tf$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 65,family = "Open Sans Bold") +
annotate("text", x = max(tf$x)/2, y = max(tf$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 65.5,family = "Open Sans Bold") +
scale_colour_identity() +
scale_alpha(range = c(0, 1), guide = 'none') +
scale_size(range = c(4, 60), guide = 'none') +
expand_limits(x=c(-0.36, 1.36), y=c(-0.36, 1.36)) +
theme_bw()
hex
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none')
p
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none')
p
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(0:10, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none')
p
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(0:10, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) + 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none')
p
animation::ani.options(interval = 1/24)
gganimate(p, 'dropping balls.gif', title_frame = F)
library(gganimate)
animation::ani.options(interval = 1/24)
gganimate(p, 'dropping balls.gif', title_frame = F)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(0:10, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- max(d$y) + 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d3,d2,d)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 100)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 10,family = "Open Sans Bold") +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 10.3,family = "Open Sans Bold") +
animation::ani.options(interval = 1/24)
gganimate(p, 'dropping balls.gif', title_frame = F)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(0:10, 20,replace= TRUE)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- max(d$y) + 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d3,d2,d)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 100)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 10,family = "Open Sans Bold") +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "white", size = 10.3,family = "Open Sans Bold") +
theme_bw()
p
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(0:10, 20,replace= TRUE)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- max(d$y) + 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d3,d2,d)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 100)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, color = "forestgreen", frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 10,family = "Open Sans Bold") +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "steelblue", size = 10.3,family = "Open Sans Bold") +
theme_void()
p
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'bounce-in'
d3 <- d2
d3$time <- d2$time + sample(0:10, 20,replace= TRUE)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- max(d$y) + 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d3,d2,d)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 100)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame), color = "forestgreen", show.legend = FALSE) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "black", font = "bold", size = 10,family = "Open Sans Bold") +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "steelblue", size = 10.3,family = "Open Sans Bold") +
theme_void()
p
gganimate(p, 'dropping balls.gif', title_frame = F)
gganimate(p, 'happy_birthday_michelle.gif', title_frame = F, ani.width = 1800, ani.height = 1200))
gganimate(p, 'happy_birthday_michelle.gif', title_frame = F, ani.width = 1800, ani.height = 1200)
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame), color = "forestgreen", show.legend = FALSE) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "steelblue", size = 10.3,family = "Open Sans Bold") +
theme_void()
gganimate(p, 'happy_birthday_michelle.gif', title_frame = F, ani.width = 1200, ani.height = 600))
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame), color = "forestgreen", show.legend = FALSE) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
annotate("text", x = max(dt$x)/2, y = max(dt$y)/2, label = "Happy Birthday\nMichelle!!\n:D",colour = "steelblue", size = 10.3,family = "Open Sans Bold") +
theme_void()
gganimate(p, 'happy_birthday_michelle.gif', title_frame = F, ani.width = 1200, ani.height = 600)
View(dt)
dist = 1     # distance between the centers of hexagons
nx = dist*15 # horizontal extent
ny = dist*15 # vertical extent
MakeHexLattice = function(nx, ny, dist, origin=c(0,0)) {
locations = cbind(location = 1:(nx*ny),
x = sort(c(rep(seq(from=0, by=dist, length.out=nx),each=ceiling(ny/2)),
rep(seq(from=dist/2, by=dist, length.out=nx),
each=floor(ny/2)))) + origin[1],
y = rep(c(seq(from=0, by = dist*sqrt(3), length.out=ceiling(ny/2)),
seq(from=dist*sqrt(3)/2, by=dist*sqrt(3),
length.out=floor(ny/2))) + origin[2], times=nx))
class(locations) = c(class(locations), "lattice")
attr(locations, "gridsize") = dist
return(locations)
}
landscape = MakeHexLattice(nx=nx,ny=ny,dist=dist,origin=c(0,0))
# Plot hexagonal lattice as points
plot(x=landscape[,2],y=landscape[,3], pch=19, col="black", cex=0.5, asp=1/1)
# Separate x and y coordinates
lx = landscape[,2] # x-coordinates
ly = landscape[,3] # y-coordinates
# Plot hexagonal lattice as filled hexagons
hex.x = cbind(lx + 0, lx + 0.5, lx + 0.5, lx + 0, lx - 0.5, lx - 0.5)
hex.y = cbind(ly - 1/(sqrt(3)), ly - 1/(2*sqrt(3)), ly + 1/(2*sqrt(3)), ly + 1/(sqrt(3)), ly + 1/(2*sqrt(3)), ly - 1/(2*sqrt(3)))
hex.vectors = cbind(hex.x, hex.y)
for(i in 1:(length(hex.vectors)/12)){
polygon(x=hex.vectors[i,1:6], y=hex.vectors[i,7:12], angle = 120, border=NULL, col="wheat",
lty = par("lty"), fillOddEven = FALSE)
}
library(ggplot2)
library(reshape2)
#Get your coordinates in long format with an id
hexdat.x <- melt(cbind(id = 1:length(hex.x), as.data.frame(hex.x)), id.vars = "id", value.name = "x")
hexdat.y <- melt(cbind(id = 1:length(hex.y), as.data.frame(hex.y)), id.vars = "id", value.name = "y")
hexdat <- merge(hexdat.x, hexdat.y)
hexdat <- hexdat[1:600,]
### trying to make the animation
hexdat3 <- data.frame()
for(i in 1:10) {
hexdat2 <- data.frame(cbind(hexdat[,1:4], frame = i), stringsAsFactors = FALSE)
hexdat3 <- rbind(hexdat3,hexdat2)
}
colcol <-sample(c(rep(0,10),rep(2,4),7,10),nrow(hexdat3), replace = TRUE)
hexdat3temp <- data.frame(breaks = hexdat3$frame,col = colcol,stringsAsFactors = FALSE)
myf<-function(mystate){as.data.frame(hexdat3temp[hexdat3temp$breaks==mystate,])}
states2<-factor(unique((hexdat3temp$breaks)))
my.list2<-lapply(states2,myf)
tf <- tween_states(my.list2, tweenlength= 3, statelength=0, ease='linear',nframes=200)
tf$id <- hexdat3[1:600,1]
tf$x <- hexdat3[1:600,3]
tf$y <- hexdat3[1:600,4]
library(tweenr)
hexdat3temp <- data.frame(breaks = hexdat3$frame,col = colcol,stringsAsFactors = FALSE)
myf<-function(mystate){as.data.frame(hexdat3temp[hexdat3temp$breaks==mystate,])}
states2<-factor(unique((hexdat3temp$breaks)))
my.list2<-lapply(states2,myf)
tf <- tween_states(my.list2, tweenlength= 3, statelength=0, ease='linear',nframes=200)
tf$id <- hexdat3[1:600,1]
tf$x <- hexdat3[1:600,3]
tf$y <- hexdat3[1:600,4]
hex <- ggplot(tf, aes(x, y,frame = frame)) +
geom_polygon(aes(group = id,fill = colcol), alpha = 1) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
hex
hex <- ggplot(tf, aes(x, y,frame = frame)) +
geom_polygon(aes(group = id,fill = breaks), alpha = 1) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
hex
View(tf)
hex <- ggplot(tf, aes(x, y,frame = .frame)) +
geom_polygon(aes(group = id,fill = breaks), alpha = 1) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
hex
hex
dev.off()
hex <- ggplot(tf, aes(x, y,frame = .frame)) +
geom_polygon(aes(group = id,fill = breaks)) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
hex
hex <- ggplot(tf, aes(x, y,frame = .frame)) +
geom_polygon(aes(group = id,fill = col)) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
hex
unique(tf$col)
hex <- ggplot(tf, aes(x, y,frame = .frame)) +
geom_polygon(aes(group = id,fill = col)) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
gganimate(hex, "hugo/static/img/hexBackground.gif", ani.width = 1200, ani.height = 800)
library(gganimate)
hex <- ggplot(tf, aes(x, y,frame = .frame)) +
geom_polygon(aes(group = id,fill = col)) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
gganimate(hex, "hugo/static/img/hexBackground.gif", ani.width = 1200, ani.height = 800)
hex <- ggplot(tf, aes(x, y,frame = .frame)) +
geom_polygon(aes(group = id,fill = col)) +
scale_fill_gradient(low = "white", high = "#e7e7e7") + theme_void() +  theme(legend.position="none")
gganimate(hex, "hugo/static/img/hexBackground.gif", ani.width = 1600, ani.height = 1600,title_frame = FALSE)
ani.options()
animation::ani.options()
animation::ani.options(interval = .5)
gganimate(hex, "hugo/static/img/hexBackground.gif", ani.width = 1600, ani.height = 2000,title_frame = FALSE)
setwd('/home/michael/Documents/hugo/')
file.create('.nojekyll')
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
file.create('.nojekyll')
blogdown::build_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
file.create('.nojekyll')
blogdown::build_site()
