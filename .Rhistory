x[[]]
hyml
html
url
url <- "https://www.baseball-reference.com/minors/"
url
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html
url <- "https://www.baseball-reference.com/minors/"
# teams=c("ARI","ATL","BAL","BOS","CHC","CHW","CIN","CLE","COL","DET","HOU","KCR","ANA","LAD","FLA","MIL","MIN","NYM","NYY","OAK","PHI","PIT","SDP","SFG","SEA","STL","TBD","TEX","TOR","WSN")
teams <- "ARI"
stats_table <- '#team_batting.sortable.stats_table'
stats_id <- paste0(stats_table,' a')
minors_batting <- data.frame()
season <- 2014
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
# batting stats
read_html(html) %>%
html_nodes(stats_table) %>%
html_table(header = T) %>%
data.frame() %>%
tbl_df() -> df
df
read_html(html)
read_html(html) %>% html_nodes()
stats_table
stats_table <- "#div_team_batting"
ead_html(html) %>%
html_nodes(stats_table)
read_html(html) %>%
html_nodes(stats_table)
stats_table <- #team_batting.sortable.stats_table"
stats_table <- "#team_batting.sortable.stats_table"
read_html(html) %>% html_nodes(xpath = '//comment()') %>%
html_nodes(stats_table)
html %>% read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>% read_html(html) %>% html_nodes(xpath = '//comment()') %>%
html_nodes(stats_table)
html %>% read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>% read_html(html) %>% html_nodes(xpath = '//comment()') %>%
html_node(stats_table)
html %>% read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>% read_html(html) %>% html_nodes(xpath = '//comment()') %>%
html_node(paste0("table",stats_table))
html %>% read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>% read_html(html) %>% html_nodes(xpath = '//comment()') %>%
html_node(paste0("table",stats_table)) -> df
df
url_splits    <-"http://www.basketball-reference.com/players/i/ingrabr01/splits/"
stats_splits  <- read_html(url_splits) %>%
html_node("table#splits") %>%
html_table()
url_college   <-"http://www.basketball-reference.com/players/i/ingrabr01.html"
stats_college <- read_html(url_college) %>%
html_node("table#all_college_stats") %>%
html_table()
stats_college <- url %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node('table#all_college_stats') %>%
html_table()
url
stats_college <- url_splits %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node('table#all_college_stats') %>%
html_table()
stats_college <- url_splits %>%
read_html %>%
html_nodes(xpath = '//comment()')
stats_college
url %>%
read_html %>%
html_nodes(xpath = '//comment()')
url
stats_table <- 'table#team_batting.sortable.stats_table'
stats_id <- paste0(stats_table,' a')
minors_batting <- data.frame()
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
urlhtml %>%
read_html %>%
html_nodes(xpath = '//comment()')
html %>%
read_html %>%
html_nodes(xpath = '//comment()')
stats_table
html %>%
read_html %>%
html_nodes(xpath = '//comment()')
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_nodes(stats_table)
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_nodes()
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table()
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
for (teams in teams){
for (season in 2014:2014) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
read_html(html) %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.cgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
for (teams in teams){
for (season in 2014:2014) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.cgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
View(minors_batting)
for (teams in teams){
for (season in 2014:2014) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.fcgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
for (teams in teams){
for (season in 2014:2014) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.fcgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
View(minors_batting)
for (teams in teams){
for (season in 2014:2014) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
minors_batting$min_playerid
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid)
class(minors_batting$min_playerid)
minors_batting$min_playerid
?gsub
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid, ignore.case = FALSE,perl = TRUE)
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid, ignore.case = FALSE,perl = FALSE)
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid, ignore.case = FALSE,perl = TRUE)
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid, ignore.case = TRUE,perl = TRUE)
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid, ignore.case = TRUE,perl = TRUE, fixed = TRUE)
minors_batting$min_playerid <- gsub("/register/player.fcgi?id=", "", minors_batting$min_playerid,fixed = TRUE)
minors_batting$min_playerid2 <- gsub(" ", "", minors_batting$min_playerid,fixed = TRUE)
all.equal(minors_batting$min_playerid,minors_batting$min_playerid2)
rm(list=ls())
url <- "https://www.baseball-reference.com/minors/"
# teams=c("ARI","ATL","BAL","BOS","CHC","CHW","CIN","CLE","COL","DET","HOU","KCR","ANA","LAD","FLA","MIL","MIN","NYM","NYY","OAK","PHI","PIT","SDP","SFG","SEA","STL","TBD","TEX","TOR","WSN")
teams <- "ARI"
stats_table <- 'table#team_batting.sortable.stats_table'
stats_id <- paste0(stats_table,' a')
minors_batting <- data.frame()
# for loop by teams and season
for (teams in teams){
for (season in 2013:2017 {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.fcgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
url <- "https://www.baseball-reference.com/minors/"
# teams=c("ARI","ATL","BAL","BOS","CHC","CHW","CIN","CLE","COL","DET","HOU","KCR","ANA","LAD","FLA","MIL","MIN","NYM","NYY","OAK","PHI","PIT","SDP","SFG","SEA","STL","TBD","TEX","TOR","WSN")
teams <- "ARI"
stats_table <- 'table#team_batting.sortable.stats_table'
stats_id <- paste0(stats_table,' a')
minors_batting <- data.frame()
# for loop by teams and season
for (teams in teams){
for (season in 2013:2017) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.fcgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
View(minors_batting)
table(minors_batting$season)
table(minors_batting$season, minors_batting$Tm)
table(minors_batting$season, minors_batting$teams)
url <- "https://www.baseball-reference.com/minors/"
teams=c("ARI","ATL","BAL","BOS","CHC","CHW","CIN","CLE","COL","DET","HOU","KCR","ANA","LAD","FLA","MIL","MIN","NYM","NYY","OAK","PHI","PIT","SDP","SFG","SEA","STL","TBD","TEX","TOR","WSN")
stats_table <- 'table#team_batting.sortable.stats_table'
stats_id <- paste0(stats_table,' a')
minors_batting <- data.frame()
# for loop by teams and season
for (teams in teams){
for (season in 2016:2017) {
html <- paste(url,"affiliate.cgi?id=",teams,"&year=",season,sep="")
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(stats_table) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(stats_id) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
df$teams <- c(teams)
# remove url data
min_playerid=gsub("/register/player.fcgi?id=", "", min_playerid,fixed = TRUE)
df$min_playerid <- c(min_playerid)
# bind to
minors_batting <- rbind(minors_batting,df)
}
}
View(minors_batting)
table(minors_batting$season, minors_batting$teams)
teams
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
