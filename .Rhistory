x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
tePlot
rbPlot
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, legend = FALSE) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
?geom_point
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
rm(list=ls())
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier)), show.legend = NA) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
View(wrPlot)
wrPlot
tePlot
wrPlot
rbPlot
rbPlot <- linePlot(rb[10:40,])
rbPlot
wrPlot <- linePlot(wr[10:40,])
wrPlot
wrPlot <- linePlot(wr[5:40,])
wrPlot
rbPlot
wrPlot
wrPlot
wrPlot <- linePlot(wr[10:40,])
wrPlot
tePlot
tePlot <- linePlot(te[10:40,])
tePlot
tePlot <- linePlot(te[6:40,])
tePlot
wrPlot
wrPlot <- linePlot(wr[15:40,])
wrPlot
wrPlot <- linePlot(wr[20:40,])
wrPlot
wrPlot <- linePlot(wr[25:40,])
wrPlot
rbPlot
qbPlot
qbPlot
wrPlot
wrPlot <- linePlot(wr[20:60,])
wrPlot
wrPlot <- linePlot(wr[40:60,])
wrPlot
dst
linePlot(dst[40:60,])
View(dst)
linePlot(dst)
rbPlot
linePlot(rb[20:50,])
k
View(k)
8*12
11*12
library(dplyr)
library(ggplot2)
#https://apps.fantasyfootballanalytics.net/
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2019-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0.csv", stringsAsFactors = FALSE)
## CHANGED TO DOWNLOADING YAHOO via app
## FROM https://www.fantasypros.com/nfl/adp/half-point-ppr-overall.php?loggedin
# adp <- read.csv("/home/michael/Downloads/FantasyPros_2019_Overall_ADP_Rankings.csv", stringsAsFactors = FALSE)
# custom$player <- gsub("'", "", custom$player)
# adp$Player <- gsub("'", "", adp$Player)
# custom$player <- gsub(" Jr", "", custom$player, ignore.case = TRUE)
# adp$Player <- gsub(" Jr", "", adp$Player, ignore.case = TRUE)
# custom$player <- gsub("[.]", "", custom$player)
# adp$Player <- gsub("[.]", "", adp$Player)
# custom <- left_join(custom, adp, by = c("player" = "Player"))
# in the app, select Settings > General Setting > ADP Source > Yahoo
yahoo <- read.csv("/home/michael/Downloads/ffa_customrankings2019-0_yahoo.csv", stringsAsFactors = FALSE)
yahoo <- yahoo %>% select(playerId, adp)
colnames(yahoo) <- c("playerId", "yahooAdp")
custom <- left_join(custom, yahoo, by = c("playerId" = "playerId"))
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
linePlot <- function(data) {
max <- max(data["upper"], na.rm = TRUE)
min <- min(data["lower"], na.rm = TRUE)
x <- ggplot(data %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) +
geom_errorbar(aes(ymin = lower, ymax = upper), show.legend = NA) +
coord_flip() +
scale_y_continuous(limits = c(min * .75, max * 1.1)) +
geom_point(aes(player,points),size=2,pch=16, show.legend = NA) +
scale_color_discrete() +
theme_light() +
guides(color=guide_legend(title=""))  +
geom_text(aes(x = player, y = Inf, label= paste0("Y: ",yahooAdp, " / O: ", overallRank, " ")), hjust = 1)
x
}
rbPlot <- linePlot(rb[1:40,])
wrPlot <- linePlot(wr[1:40,])
qbPlot <- linePlot(qb[1:40,])
tePlot <- linePlot(te[1:40,])
rbPlot
View(custom)
View(rbPlot)
View(wrPlot)
wrPlot
View(qbPlot)
qbPlot
wrPlot
rbPlot
rbPlot <- linePlot(rb[10:40,])
wrPlot <- linePlot(wr[10:40,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
rbPlot
rbPlot <- linePlot(rb[20:40,])
wrPlot <- linePlot(wr[10:40,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
rbPlot <- linePlot(rb[25:40,])
wrPlot <- linePlot(wr[20:40,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
wrPlot
rbPlot
rbPlot <- linePlot(rb[25:50,])
wrPlot <- linePlot(wr[20:50,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
rbPlot <- linePlot(rb[32:50,])
wrPlot <- linePlot(wr[20:50,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
wrPlot
qbPlot
tePlot
rbPlot <- linePlot(rb[32:50,])
wrPlot <- linePlot(wr[30:50,])
qbPlot <- linePlot(qb[10:40,])
tePlot <- linePlot(te[10:40,])
rbPlot
wrPlot
View(dst)
dst
rbPlot
x = letters
x[x %in% name] <- letters[rank(letters) - 3]
substring(rep("moses", 5), c(1:nchar(name)),c(1:nchar(name)))
letters2 <- c(letters[4:26],letters[1:3])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
letters
scram("fumble")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
print(name)
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fumble")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
print(name)
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
print(name2)
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fumble")
letters2 <- c(letters[2:26],letters[1])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
print(name)
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
print(name2)
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fumble")
scram("tackling")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("tackling")
scram("caught")
scram("tackled")
scram("stripped")
scram("running")
letters2 <- c(letters[26],letters[1:25])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("running")
scram("tackled")
scram("fumbled")
Sys.getenv("PATH")
?Sys.setenv
.libPaths("/home/michael/R/x86_64-pc-linux-gnu-library/3.6.2")
.libPaths(new = "/home/michael/R/x86_64-pc-linux-gnu-library/3.6")
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
export PATH=$PATH:/home/michael/.rbenv/versions/2.3.1/bin
Sys.getenv("HOME")
.libPaths()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
