breaks=c(0, 234, 239, 244, 249, 300),
labels=c("235>", "235", "240 ", "245",
"250<"))
gg <- ggplot()
gg <- gg + geom_map(data=us_map, map=us_map,
aes(x=long, y=lat, map_id=id),
color="white", size=0.5)
gg <- gg + geom_map(data=math15, map=us_map,
aes(fill=breaks, map_id=State))
gg <- gg + geom_map(data=math15, map=us_map,
aes(map_id=State),
fill="#ffffff", alpha=0, color="white",
show.legend = FALSE)
gg <- gg + geom_text(data=centers, aes(label=id, x=x, y=y), color="white", size=8)
gg <- gg + scale_fill_brewer(palette = "Greens")
gg <- gg + coord_map()
gg <- gg + labs(x=NULL, y=NULL, title="2015 Math Performance by Focal Jurisdiction")
gg <- gg + theme_bw()
gg <- gg + theme(plot.title=element_text(face="bold", hjust=0, size=24))
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(panel.margin=unit(3, "lines"))
gg <- gg + theme(panel.grid=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text=element_blank())
gg <- gg + theme(strip.background=element_blank())
gg <- gg + theme(strip.text=element_text(face="bold", hjust=0, size=14))
gg <- gg + theme(legend.position=c(0.85, 0.1))
gg <- gg + theme(legend.direction="horizontal?")
gg <- gg + theme(legend.title.align=1)
gg
plot(us)
plot(us,xaxis = FALSE)
plot(us,type="n")
?plot
plot(us,type="n", lwd=2)
plot(us,type="n", lwd=3)
plot(us, lwd=3)
hexgrid <- function(rows, columns, id, remove) {
xVals <<- rep(c(rep(1:(columns))*2 -1,rep(rep(1:(columns))*2)),rows)
xVals <- xVals[1:(length(xVals)/2)]
yVals <- rep(1:(rows) * 1.5, rep(columns,rows)) -.5
paste("{",dQuote("type"),": ",dQuote("FeatureCollection"),", ",dQuote("features"),": [\n\n", sep="")
for(i in 1:(rows * columns )) {
if(!(i %in% remove)) {
paste("{",dQuote("type"),":",dQuote("Feature"),",",dQuote("geometry"),":{", dQuote("type"),":", dQuote("Polygon"),",\n",
dQuote("coordinates"),": [[[",xVals[i],", ",yVals[i] + 2,"], [",xVals[i] + 1,", ",yVals[i] + 1.5,"], [",xVals[i] + 1,", ",yVals[i] + .5,"], [",xVals[i],", ",yVals[i],"], [",xVals[i] - 1,", ",yVals[i] + .5,"], [",xVals[i] - 1,", ",yVals[i] + 1.5,"], [",xVals[i],", ",yVals[i] + 2,"]]]\n},",dQuote("properties"),":{",dQuote("id"),":",dQuote(id[i]),"}},\n", sep="")
}
}
paste("\n]}", sep="")
}
hexgrid(rows = 15, columns = 20, id= c(1:(15*20)), remove = c(11))
hexgrid <- function(rows, columns, id, remove) {
xVals <<- rep(c(rep(1:(columns))*2 -1,rep(rep(1:(columns))*2)),rows)
xVals <- xVals[1:(length(xVals)/2)]
yVals <- rep(1:(rows) * 1.5, rep(columns,rows)) -.5
cat(paste(("{",dQuote("type"),": ",dQuote("FeatureCollection"),", ",dQuote("features"),": [\n\n", sep=""))
for(i in 1:(rows * columns )) {
if(!(i %in% remove)) {
cat(paste(("{",dQuote("type"),":",dQuote("Feature"),",",dQuote("geometry"),":{", dQuote("type"),":", dQuote("Polygon"),",\n",
dQuote("coordinates"),": [[[",xVals[i],", ",yVals[i] + 2,"], [",xVals[i] + 1,", ",yVals[i] + 1.5,"], [",xVals[i] + 1,", ",yVals[i] + .5,"], [",xVals[i],", ",yVals[i],"], [",xVals[i] - 1,", ",yVals[i] + .5,"], [",xVals[i] - 1,", ",yVals[i] + 1.5,"], [",xVals[i],", ",yVals[i] + 2,"]]]\n},",dQuote("properties"),":{",dQuote("id"),":",dQuote(id[i]),"}},\n", sep=""))
}
}
cat(paste(("\n]}", sep=""))
}
hexgrid(rows = 15, columns = 20, id= c(1:(15*20)), remove = c(11))
hexgrid <- function(rows, columns, id, remove) {
xVals <<- rep(c(rep(1:(columns))*2 -1,rep(rep(1:(columns))*2)),rows)
xVals <- xVals[1:(length(xVals)/2)]
yVals <- rep(1:(rows) * 1.5, rep(columns,rows)) -.5
cat(paste("{",dQuote("type"),": ",dQuote("FeatureCollection"),", ",dQuote("features"),": [\n\n", sep=""))
for(i in 1:(rows * columns )) {
if(!(i %in% remove)) {
cat(paste("{",dQuote("type"),":",dQuote("Feature"),",",dQuote("geometry"),":{", dQuote("type"),":", dQuote("Polygon"),",\n",
dQuote("coordinates"),": [[[",xVals[i],", ",yVals[i] + 2,"], [",xVals[i] + 1,", ",yVals[i] + 1.5,"], [",xVals[i] + 1,", ",yVals[i] + .5,"], [",xVals[i],", ",yVals[i],"], [",xVals[i] - 1,", ",yVals[i] + .5,"], [",xVals[i] - 1,", ",yVals[i] + 1.5,"], [",xVals[i],", ",yVals[i] + 2,"]]]\n},",dQuote("properties"),":{",dQuote("id"),":",dQuote(id[i]),"}},\n", sep=""))
}
}
cat(paste("\n]}", sep=""))
}
hexgrid(rows = 15, columns = 20, id= c(1:(15*20)), remove = c(11))
hexgrid <- function(rows, columns, id, remove) {
xVals <<- rep(c(rep(1:(columns))*2 -1,rep(rep(1:(columns))*2)),rows)
xVals <- xVals[1:(length(xVals)/2)]
yVals <- rep(1:(rows) * 1.5, rep(columns,rows)) -.5
cat(paste("{",dQuote("type"),": ",dQuote("FeatureCollection"),", ",dQuote("features"),": [\n\n", sep=""))
for(i in 1:(rows * columns )) {
if(!(i %in% remove)) {
cat(paste("{",dQuote("type"),":",dQuote("Feature"),",",dQuote("geometry"),":{", dQuote("type"),":", dQuote("Polygon"),",\n",
dQuote("coordinates"),": [[[",xVals[i],", ",yVals[i] + 2,"], [",xVals[i] + 1,", ",yVals[i] + 1.5,"], [",xVals[i] + 1,", ",yVals[i] + .5,"], [",xVals[i],", ",yVals[i],"], [",xVals[i] - 1,", ",yVals[i] + .5,"], [",xVals[i] - 1,", ",yVals[i] + 1.5,"], [",xVals[i],", ",yVals[i] + 2,"]]]\n},",dQuote("properties"),":{",dQuote("id"),":",dQuote(id[i]),"}},\n", sep=""))
}
}
cat(paste("\n]}", sep=""))
}
x <- hexgrid(rows = 15, columns = 20, id= c(1:(15*20)), remove = c(11))
x
library(servr)
setwd('/home/michael/Documents/mikeleeco.github.com/')
jekyll()
jekyll(input = "_source", output = "_posts", command = "bundle exec jekyll build")
table(round(minnesotawisconsin$POP_COU,-5), minnesotawisconsin$urbanClass)
jekyll(input = "_source", output = "_posts", command = "bundle exec jekyll build")
library(readr)
library(choroplethr)
library(choroplethrMaps)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(gridExtra)
library(dplyr)
library(stringr)
library(tidyr)
library(extrafont)
extrafont::loadfonts(quiet = TRUE)
all_results <- read_csv("https://raw.githubusercontent.com/mkearney/presidential_election_county_results_2016/master/pres16results.csv")
urban <- read.table("http://www2.census.gov/geo/docs/reference/ua/PctUrbanRural_County.txt",
header=TRUE,sep=",", colClasses = "character")
urban$fips <- paste0(urban$STATE,urban$COUNTY)
urban <- urban %>% select(POP_COU, POPPCT_URBAN, fips)
urban[,1:2] <- sapply(urban[,1:2], as.numeric)
all_results <- left_join(all_results,urban)
minnesotawisconsin$urbanClass <- factor(minnesotawisconsin$urbanClass,
levels = c("Medium to Large Metropolitan Area", "Small Metropolitan Area", "Not a Metropolitan Area"))
minnesotawisconsin <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes))
minnesotawisconsin <- minnesotawisconsin %>% group_by(st, urbanClass) %>% mutate(percent = sum/sum(sum))
minnesotawisconsin$st <- factor(minnesotawisconsin$st, levels = c("MN", "WI"),
labels = c("Minnesota", "Wisconsin"))
minnesotawisconsin <- all_results %>%
filter(str_detect(fips, c("^55")) | str_detect(fips, c("^27")))
minnesotawisconsin$urbanClass <- ifelse(minnesotawisconsin$POP_COU < 50000, "Not a Metropolitan Area",
ifelse(minnesotawisconsin$POP_COU > 50000 & minnesotawisconsin$POP_COU < 250000,
"Small Metropolitan Area","Medium to Large Metropolitan Area"))
# Quick idiot check to make sure our ifelse statement didn't go awry
table(round(minnesotawisconsin$POP_COU,-5), minnesotawisconsin$urbanClass)
minnesotawisconsin$urbanClass <- factor(minnesotawisconsin$urbanClass,
levels = c("Medium to Large Metropolitan Area", "Small Metropolitan Area", "Not a Metropolitan Area"))
minnesotawisconsin <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes))
minnesotawisconsin <- minnesotawisconsin %>% group_by(st, urbanClass) %>% mutate(percent = sum/sum(sum))
minnesotawisconsin$st <- factor(minnesotawisconsin$st, levels = c("MN", "WI"),
labels = c("Minnesota", "Wisconsin"))
minnesotawisconsin %>% group_by(st, urbanClass) %>% summarise(pct = sum/sum(sum))
```
minnesotawisconsin %>% group_by(st, urbanClass)
minnesotawisconsin %>% select(st,urbanClass) %>% group_by(st, urbanClass)
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st, urbanClass)
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st, urbanClass) %>% mutate(pct = sum/sum(sum))
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st) %>% mutate(pct = sum/sum(sum))
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(urbanClass) %>% mutate(pct = sum/sum(sum))
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(urbanClass) %>% summarise(pct = sum/sum(sum))
?summarise
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(urbanClass) %>% summarise(pct = mean(sum))
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st,urbanClass) %>% summarise(pct = mean(sum))
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st,urbanClass) %>% summarise(pct = sum)
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st,urbanClass) %>% summarise(pct = sum(sum))
minnesotawisconsin %>% select(st,urbanClass, sum) %>% group_by(st,urbanClass) %>% summarise(total = sum(sum)) %>% mutate(pct = total/sum(total))
jekyll(input = "_source", output = "_posts", command = "bundle exec jekyll build")
jekyll(input = "_source", output = "_posts", command = "bundle exec jekyll build")
View(minnesotawisconsin)
minnesotawisconsin <- all_results %>%
filter(str_detect(fips, c("^55")) | str_detect(fips, c("^27")))
minnesotawisconsin$urbanClass <- ifelse(minnesotawisconsin$POP_COU < 50000, "Not a Metropolitan Area",
ifelse(minnesotawisconsin$POP_COU > 50000 & minnesotawisconsin$POP_COU < 250000,
"Small Metropolitan Area","Medium to Large Metropolitan Area"))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>%
summarise(sum = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>%
summarise(sum = sum(POP_COU), votePct = votes/sum)
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% mutate(votePct = votes/sum(POP_COU)) %>%
summarise(sum = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>%
summarise(sum = sum(POP_COU)) ->x
x %>% mutate(votePct = votes/sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% mutate(votePct = votes/sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% mutate(votePct = votes/sum(POP_COU)) -> x
View(x)
unique(x$votePct)
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% summarise(votePct = votes/sum(POP_COU)) -> x
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% summarise(votePct = sum(votes)/sum(POP_COU)) -> x
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% summarise(votePct = sum(votes)) -> x
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>% summarise(votePct = sum(votes), pop = sum(POP_COU)) -> x
11067160+ 4377988 + 7302796
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st) %>% summarise(votePct = sum(votes), pop = sum(POP_COU)) -> x
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(county) %>% summarise(votePct = sum(votes), pop = sum(POP_COU)) -> x
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(county) -> x
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>%
summarise(sum = sum(votes))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,urbanClass) %>%
summarise(sum = sum(votes), pop = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st) %>%
summarise(sum = sum(votes), pop = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(county) %>%
summarise(sum = sum(votes), pop = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(county,st) %>%
summarise(sum = sum(votes), pop = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,county) %>%
summarise(sum = sum(votes), pop = sum(POP_COU))
72+88
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(st,county) %>%
summarise(sum = sum(votes), pop = sum(POP_COU)) -> x
x %>% group_by(st) %>% mutate(pop2 = sum(pop))
x %>% group_by(st) %>% summarise(pop2 = sum(pop))
x %>% group_by(st) %>% summarise(pop2 = mean(pop))
x %>% group_by(st) %>% mutate(pop2 = sum(pop))
x %>% group_by(st)
x %>% group_by(st) %>% filter(st=="WI")
x %>% group_by(st) %>% filter(st=="WI") -> x
sum(x$sum)
sum(x$pop)
View(all_results)
all_results %>% group_by(st) %>% filter(st=="WI") -> x
View(x)
sum(x$sum)
sum(x$sum, na.rm = TRUE)
sum(x$POP_COU, na.rm = TRUE)
x %>% group_by(county)
x %>% group_by(county)%>% summarise(pop2 = mean(pop))
x %>% group_by(county)%>% summarise(pop2 = mean(POP_COU))
x %>% group_by(county)%>% summarise(pop2 = mean(POP_COU)) ->b
sum(b$pop2, na.rm = TRUE)
all_results %>% group_by(st) %>% filter(st=="MN") -> x
x %>% group_by(county)%>% summarise(pop2 = mean(POP_COU)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% summarise(pop2 = POP_COU) ->b
x %>% group_by(county)%>% summarise(pop2 = unique(POP_COU)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% summarise(pop2 = unique(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% summarise(pop2 = mean(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% summarise(pop2 = mean(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
all_results %>% group_by(st) %>% filter(st=="MN") -> x
View(x)
all_results %>% group_by(st,county) %>% filter(st=="MN") -> x
all_results %>% group_by(st) %>% filter(st=="MN") -> x
x %>% group_by(county)%>% summarise(pop2 = mean(POP_COU)) ->b
b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% summarise(pop2 = mean(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)
x %>% group_by(county)%>% filter(pct_report!="1") %>% summarise(pop2 = mean(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% filter(pct_report!=1) %>% summarise(pop2 = mean(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
x %>% group_by(county)%>% filter(county!=1)
x %>% group_by(county)%>% filter(county!=1)%>% summarise(pop2 = mean(total_votes)) ->b
sum(b$pop2, na.rm = TRUE)
minnesotawisconsin <- all_results %>%
filter(str_detect(fips, c("^55")) | str_detect(fips, c("^27")))
minnesotawisconsin$urbanClass <- ifelse(minnesotawisconsin$POP_COU < 50000, "Not a Metropolitan Area",
ifelse(minnesotawisconsin$POP_COU > 50000 & minnesotawisconsin$POP_COU < 250000,
"Small Metropolitan Area","Medium to Large Metropolitan Area"))
# Quick idiot check to make sure our ifelse statement didn't go awry
table(round(minnesotawisconsin$POP_COU,-5), minnesotawisconsin$urbanClass)
minnesotawisconsin$urbanClass <- factor(minnesotawisconsin$urbanClass,
levels = c("Medium to Large Metropolitan Area", "Small Metropolitan Area", "Not a Metropolitan Area"))
minnesotawisconsin <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes))
minnesotawisconsin <- minnesotawisconsin %>% group_by(st, urbanClass) %>% mutate(percent = sum/sum(sum))
minnesotawisconsin$st <- factor(minnesotawisconsin$st, levels = c("MN", "WI"),
labels = c("Minnesota", "Wisconsin"))
minnesotawisconsin
minnesotawisconsin %>%
select(st,urbanClass, sum) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sum)) %>%
mutate(pct = total/sum(total))
minnesotawisconsin <- all_results %>%
filter(str_detect(fips, c("^55")) | str_detect(fips, c("^27")))
minnesotawisconsin$urbanClass <- ifelse(minnesotawisconsin$POP_COU < 50000, "Not a Metropolitan Area",
ifelse(minnesotawisconsin$POP_COU > 50000 & minnesotawisconsin$POP_COU < 250000,
"Small Metropolitan Area","Medium to Large Metropolitan Area"))
# Quick idiot check to make sure our ifelse statement didn't go awry
table(round(minnesotawisconsin$POP_COU,-5), minnesotawisconsin$urbanClass)
minnesotawisconsin$urbanClass <- factor(minnesotawisconsin$urbanClass,
levels = c("Medium to Large Metropolitan Area", "Small Metropolitan Area", "Not a Metropolitan Area"))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes), POP = sum(POP_COU))
minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes), POP = mean(POP_COU))
mnwiUrban <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes), pop = mean(POP_COU))
View(mnwiUrban)
mnwiUrban <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sum = sum(votes), pop = sum(POP_COU))
mnwiUrban[5,1:3]
mnwiUrban[1:3,5]
sum(mnwiUrban[1:3,5])
sum(mnwiUrban[4:6,5])
x %>% group_by(county)%>% filter(county!=1)%>% summarise(pop2 = mean(POP_COU)) ->b
sum(b$pop2,na.rm = TRUE)
all_results %>% group_by(st) %>% filter(st=="WI") -> x
x %>% group_by(county)%>% filter(county!=1)%>% summarise(pop2 = mean(POP_COU)) ->b
sum(b$pop2,na.rm = TRUE)
mnwiUrban <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sumVotes = sum(votes), population = mean(POP_COU))
mnwiUrban <- minnesotawisconsin %>%
filter(cand %in% c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein")) %>%
mutate(cand = factor(cand, levels = c("Donald Trump", "Hillary Clinton", "Gary Johnson", "Jill Stein"),
labels = c("Trump", "Clinton", "Johnson", "Stein"))) %>%
group_by(cand, st,urbanClass) %>%
summarise(sumVotes = sum(votes), population = sum(POP_COU))
mnwiUrban <- mnwiUrban %>%
group_by(st, urbanClass) %>%
mutate(percent = sumVotes/sum(sumVotes))
mnwiUrban <- mnwiUrban %>%
group_by(st, urbanClass) %>%
mutate(percent = sumVotes/sum(sumVotes), votingPortion =  sumVotes/sum(population))
mnwiUrban <- mnwiUrban %>%
group_by(st, urbanClass) %>%
mutate(percent = sumVotes/sum(sumVotes), votingPortion =  sum(sumVotes)/sum(population))
1411946/2766790
mnwiUrban %>%
select(st,urbanClass, sumVotes, population)
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = sum(population))
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = mean(population))
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = population)
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = mean(population))
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = unique(population))
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = unique(population)) %>%
mutate(votePct = total/sum(total), popPct = total/sum(urbanClassPopulation))
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), urbanClassPopulation = unique(population)) %>%
mutate(votePct = total/sum(total), popPct = total/urbanClassPopulation)
mnwiUrban
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), metroPopulationTotal = unique(population)) %>%
mutate(stateVoteAllocationByMetro = total/sum(total), votingPctByMetroPopulation = total/metroPopulationTotal)
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), metroPopulationTotal = unique(population)) %>%
mutate(stateVoteAllocationByMetro = total/sum(total),
popPctByMetro = metroPopulationTotal/sum(metroPopulationTotal),
votingPctByMetroPopulation = total/metroPopulationTotal)
mnwiUrban %>%
select(st,urbanClass, sumVotes, population) %>%
group_by(st,urbanClass) %>%
summarise(total = sum(sumVotes), metroPopulationTotal = unique(population)) %>%
mutate(stateVoteAllocationByMetro = total/sum(total),
popPctByMetro = metroPopulationTotal/sum(metroPopulationTotal),
votingPctByMetroPopulation = total/metroPopulationTotal)
options()$width
options()$width
jekyll()
jekyll(input = "_source", output = "_posts", command = "bundle exec jekyll build")
library(choroplethrMaps)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(gridExtra)
library(dplyr)
library(stringr)
library(tidyr)
library(extrafont)
extrafont::loadfonts(quiet = TRUE)
all_results <- read_csv("https://raw.githubusercontent.com/mkearney/presidential_election_county_results_2016/master/pres16results.csv")
urban <- read.table("http://www2.census.gov/geo/docs/reference/ua/PctUrbanRural_County.txt",
header=TRUE,sep=",", colClasses = "character")
urban$fips <- paste0(urban$STATE,urban$COUNTY)
urban <- urban %>% select(POP_COU, POPPCT_URBAN, fips)
urban[,1:2] <- sapply(urban[,1:2], as.numeric)
all_results <- left_join(all_results,urban)
all_results2 <- all_results
urban2 <- urban
