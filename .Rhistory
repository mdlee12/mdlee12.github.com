html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerID,fixed = TRUE)
df$playerID <- c(playerID)
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
html <- paste0(url,season,".html")
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerID,fixed = TRUE)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerIDhtml,fixed = TRUE)
df$playerID <- c(playerID)
colnames(df) <- df[1,]
df <- df[-1, ]
for (season in 1956:1957) {
html <- paste0(url,season,".html")
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
colnames(df) <- df[1,]
df <- df[-1, ]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerIDhtml,fixed = TRUE)
df$playerID <- c(playerID)
# bind to
rushingData <- rbind(rushingData,df)
}
View(rushingData)
url <- "https://www.sports-reference.com/cfb/schools/wisconsin/"
rushingTable <- '#rushing_and_receiving'
playerIDTable <- paste0(rushingTable,' a')
rushingData <- data.frame()
# for loop by season
for (season in 1956:1999) {
html <- paste0(url,season,".html")
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
colnames(df) <- df[1,]
df <- df[-1, ]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerIDhtml,fixed = TRUE)
df$playerID <- c(playerID)
# bind to
rushingData <- rbind(rushingData,df)
}
View(rushingData)
devtools::install_github('rstudio/rmarkdown#1303')
install.packages("curl")
devtools::install_github('rstudio/rmarkdown#1303')
devtools::install_github('rstudio/rmarkdown#1303')
?im.convert
library(animation)
?im.convert
letters
letters - 3
letters[1:26]
letters["moses"]
?match
1:10 %in% c(1,3,5,9)
rank(letts)
rank(letters)
letters[rank(letters) - ]
letters[rank(letters) - 1]
letters[rank(letters) - +1]
letters[rank(letters) + 1]
??reconcilePropertiesAndPrototypele
expand_args <- function(...){
dots <- list(...)
max_length <- max(sapply(dots, length))
lapply(dots, rep, length.out = max_length)
}
expand_args(letters)
expand_args(letters[1])
with(data.frame(x = c(3, 2, 1, 0, 4, 0)), replace(x, x == 0, 1))
with(data.frame(x = c(letters)), replace(x, x == 0, 1))
with(data.frame(x = c(letters)), replace(x, x == "a", 1))
with(c(letters), replace(x, x == "a", 1))
with(c(letters), replace(letters, letters == "a", 1))
with(data.frame(x = letters), replace(x, x == "a", 1))
with(data.frame(x = letters,stringsAsFactors = FALSE), replace(x, x == "a", 1))
with(data.frame(x = letters,stringsAsFactors = FALSE), replace(x, name %in% letters, 1))
?strsplit()
split("ndddnn")
x = c(1, 1, 2, 4, 5, 2, 1, 3, 2)
x[x==1] <- 0
z
x
x =letters
x[x==1] <- 0
x
"moses"
list("moses")
?strtrim()
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
strtrim(c("moses", "moses", "moses", "moses", "moses"), c(1,2,3,4,5))
substr(c("moses", "moses", "moses", "moses", "moses"), c(1,2,3,4,5))
substr(rep("abcdef", 4), 1:4, 4:5)
substr(rep("moses", 5), 1,2,3,4,5)
substr(rep("moses", 5), 1,2)
substring(rep("moses", 5), 1,2)
substring(rep("moses", 5), 1,2,3)
substring(rep("moses", 5), c(1,2),c(1,2))
substring(rep("moses", 5), c(1,2,3,4,5),c(1,2,3,4,5))
x = letters
name = substring(rep("moses", 5), c(1,2,3,4,5),c(1,2,3,4,5))
x[x %in% name] <- letters[rank(letters) - 3]
x
x[x %in% name]
x = letters
name = substring(rep("moses", 5), c(1,2,3,4,5),c(1,2,3,4,5))
name[name %in% x]
letters[rank(letters) - 3]
rank(letters) - 3
letters[4:26]
c(letters[4:26],letters[1:3])
letters
letters2 <- c(etters[4:26],letters[1:3])
letters2 <- c(letters[4:26],letters[1:3])
letters2
rank(letters2)
letters3 <- as.factor(letters2, levels = 1:26)
letters3 <- as.factor(labels = letters2, levels = 1:26)
letters3 <- factor(labels = letters2, levels = 1:26)
letters3
letters3 <- factor(letters2, levels = 1:26)
letters3
?factor
lletters
letters
letters3 <- factor(x = letters2, labels = letters2, levels = 1:26)
letters3
letters3 <- factor(x = letters2,  levels = 1:26)
letters3
letters3 <- factor(x = letters2, levels = letters2, labels =  = 1:26)
letters3 <- factor(x = letters2, levels = letters2, labels = 1:26)
letters3
letters3 <- factor(x = letters2, levels = letters2, labels = letters2)
letters3
letters3 <- factor(x = letters2, levels = letters2, labels = 1:26)
letters3
letters2
letters3 <- factor(x = letters2, levels = letters2, labels = letters2)
letters2
letters3
rank(letters3)
letters2 <- c(letters[4:26],letters[1:3])
letters3 <- factor(x = letters2, levels = letters2, labels = letters2)
letters3
letters[letters3]
letters3[letters]
letters2 <- c(letters[4:26],letters[1:3])
letters1[letters]
letters2[letters]
letters
letters2
substring(rep("moses", 5), c(1,2,3,4,5),c(1,2,3,4,5))
name
name %in% letters
letters %in% name
letters2[letters %in% name]
letters2[letters == name]
letters2
letters %in% name
letters %in% name
letters
letters2
x = letters
name = substring(rep("moses", 5), c(1,2,3,4,5),c(1,2,3,4,5))
name
x = letters
name = substring(rep("aabdc", 5), c(1,2,3,4,5),c(1,2,3,4,5))
name
if("a" %in% name) {
name <- gsub("a", "d", name)
}
name
letters2 <- c(letters[4:26],letters[1:3])
letters2
name[1] %in% letters2
letters2 %in% name[1]
name[1]
letters2["d"]
letters2
letters2 == "d"
letters2[letters2 == "d"]
which(letters2 == "d")
which(letters2 == "e")
which(letters2 == "z")
name
name = substring(rep("moses", 5), c(1,2,3,4,5),c(1,2,3,4,5))
for(i in 1:length(name)) {
name <- gsub(i, letters2[which(letters2 == i)], name)
}
name
name2 <- c()
for(i in 1:length(name)) {
name2 <- c(name2, gsub(name[i], letters2[which(letters2 == i)], name))
}
name2
name[i]
name2 <- c()
for(i in 1:length(name)) {
name2 <- c(name2, gsub(name[i], letters2[which(letters2 == name[i])], name))
}
name2
letters2
name2 <- c()
for(i in 1:length(name)) {
name2 <- c(name2, gsub(name[i], letters[which(letters2 == name[i])], name))
}
name2
name2 <- c()
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name)
}
name2
name
for(i in 1:length(name)) {
print(name[i])
}
name2 <- c()
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name)
print(name2)
}
name2 <- c()
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
print(name2)
}
name2 <- c()
name3 <- c()
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name2,name3)
}
name3
name2 <- c()
name3 <- c()
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name3,name2)
}
name3
scram <- function(x) {
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("moses")
name2 <- c()
name3 <- c()
scram <- function(x) {
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("moses")
scram("david")
scram <- function(name) {
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("david")
rm(name)
scram("david")
scram <- function(name) {
name = substring(rep(name, 5), c(1,2,3,4,5),c(1,2,3,4,5))
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("david")
scram("sarah")
scram("peter")
scram("judas")
scram("adam")
scram("pilot")
scram <- function(name) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("pilot")
scram("pilo")
scram("aaron")
scram("asher")
scram("caleb")
scram("james")
scram("isaac")
scram("jonah")
scram("jared")
scram("ethan")
scram("simon")
scram("abram")
scram("sodom")
scram("jesus")
scram("james")
scram("jason")
scram("isaac")
scram("felix")
scram("ethan")
scram("cyrus")
scram("jonas")
scram("judah'")
scram("judah")
scram("judas")
scram("julia")
scram("kenan")
scram("lydia")
scram("micah")
scram("moses")
scram("peter")
scram("satan")
scram("sheba")
scram("silar")
scram("silas")
scram("titus")
scram("dd")
scram("afixia")
scram("cough")
scram("fever")
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("fever")
scram("fever", FALSE)
scram("cough", FALSE)
scram("grief", FALSE)
scram("blind", FALSE)
scram("greed", FALSE)
scram("pride", FALSE)
scram("pride", TRUE)
scram("mary", TRUE)
x = letters
x[x %in% name] <- letters[rank(letters) - 3]
substring(rep("moses", 5), c(1:nchar(name)),c(1:nchar(name)))
letters2 <- c(letters[4:26],letters[1:3])
name2 <- c()
name3 <- c()
scram <- function(name, forwards = TRUE) {
name = substring(rep(name, nchar(name)), c(1:nchar(name)),c(1:nchar(name)))
for(i in 1:length(name)) {
if(forwards) {
name2 <- gsub(name[i], letters[which(letters2 == name[i])], name[i])
} else {
name2 <- gsub(name[i], letters2[which(letters == name[i])], name[i])
}
name3 <- paste0(name3,name2)
}
print(name3)
}
scram("moses",TRUE)
scram("moses")
scram("cough")
scram("davis")
scram("david")
scram("jesus")
scram("judah")
scram("aaron")
scram("simon")
scram("isaac")
scram("abner")
scram("sarai")
scram("sinai")
scram("egypt")
scram("judah")
scram("judea")
scram("mount")
scram("sinai")
scram("olive")
scram("sodom")
scram("spain")
scram("zorah")
scram("babel")
scram("sheba")
scram("enoch")
scram("tubal")
scram("kenan")
scram("peleg")
scram(serug)
scram("serug")
scram("nahor")
scram("terah")
scram("jacob")
scram("isaac")
scram("judah")
scram("perez")
scram("jesse")
scram("davis")
scram("davis")
scram("david")
scram("sarah")
scram("aaron")
scram("eldad")
scram("medad")
scram("isaih")
scram("hosea")
scram("jonah'")
scram("jonah")
scram("micah")
scram("nahum")
scram("beeri")
scram("uriah")
scram("nadab")
scram("zimri")
scram("pekah")
scram("simon")
scram("herod")
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
