sprite_sheet <- png::readPNG("runningPokemon.png")
getwd()
list.files()
sprite_sheet <- png::readPNG("runningPokemon.png")
Nframes       <- 16      # number of frames to extract
width         <- 28      # width of a frame
Nframes       <- 6      # number of frames to extract
width         <- 6      # width of a frame
for (i in seq(Nframes)) {
sprite_frames[[i]] <- sprite_sheet[1:2, (width*(i-1)) + (1:width) + offset[i], 1:3]
}
sprite_frames
plot(as.raster(sprite_frames[[15]]), interpolate=FALSE)
rm(sprite_frames)
for (i in seq(Nframes)) {
sprite_frames[[i]] <- sprite_sheet[1:2, (width*(i-1)) + (1:width) + offset[i], 1:3]
}
for (i in seq(Nframes)) {
sprite_frames[[i]] <- sprite_sheet[1:2, (width*(i-1)) + (1:width) + offset[i], 1:2]
}
sprite_frames <- list()  # storage for the extracted frames
for (i in seq(Nframes)) {
sprite_frames[[i]] <- sprite_sheet[1:2, (width*(i-1)) + (1:width) + offset[i], 1:2]
}
plot(as.raster(sprite_frames[[15]]), interpolate=FALSE)
plot(as.raster(sprite_frames[[5]]), interpolate=FALSE)
plot(as.raster(sprite_frames[5]), interpolate=FALSE)
sprite_frames
plot(as.raster(sprite_frames[]), interpolate=FALSE)
plot(as.raster(sprite_frames[1]), interpolate=FALSE)
plot(as.raster(sprite_frames[,1]), interpolate=FALSE)
plot(as.raster(sprite_frames[[6]]), interpolate=FALSE)
sprite_frames[[6]])
sprite_frames[[1]]
sprite_frames <- list()  # storage for the extracted frames
sprite_sheet <- png::readPNG("12593.png")
Nframes       <- 16      # number of frames to extract
width         <- 28      # width of a frame
sprite_frames <- list()  # storage for the extracted frames
# Not equal sized frames in the sprite sheet. Need to compensate for each frame
offset <- c(3, 4, 6, 7, 7, 6, 5, 5, 6, 6, 7, 7, 7, 6, 7, 8)
# Manually extract each frame
for (i in seq(Nframes)) {
sprite_frames[[i]] <- sprite_sheet[13:40, (width*(i-1)) + (1:width) + offset[i], 1:3]
}
sprite_frames[[1]]
plot(as.raster(sprite_frames[[6]]), interpolate=FALSE)
plot(as.raster(sprite_frames[1), interpolate=FALSE)
plot(as.raster(sprite_frames[1], interpolate=FALSE)
)
plot(as.raster(sprite_frames[[6]]), interpolate=FALSE)
sprite_frames[[6]])
sprite_frames[[6]]
sprite_sheet <- png::readPNG("runningPokemon.png")
rm(sprite_frames)
sprite_sheet
sprite_sheet <- png::readPNG("12593.png")
sprite_sheet
devtools::install_github("FantasyFootballAnalytics/ffanalytics")
library(ffanalytics)
getwd()
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2018-0.csv")
custom <- read.csv("/home/michael/Downloads/ffa_customranking2018-0.csv")
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2018-0.csv")
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2018-0.csv")
View(custom)
View(raw)
library(dplyr)
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
def <- filter(custom, position == "DEF")
table(custom$position)
dst <- filter(custom, position == "DST")
rm(def)
K <- filter(custom, position == "K")
k <- K
rm(k)
k <- K
rm(K)
View(dst)
library(ggplot2)
?geom_linerange
p <- ggplot(df, aes(trt, resp, colour = group))
p + geom_linerange(aes(ymin = lower, ymax = upper))
#' # Create a simple example dataset
df <- data.frame(
trt = factor(c(1, 1, 2, 2)),
resp = c(1, 5, 3, 4),
group = factor(c(1, 2, 1, 2)),
upper = c(1.1, 5.3, 3.3, 4.2),
lower = c(0.8, 4.6, 2.4, 3.6)
)
p <- ggplot(df, aes(trt, resp, colour = group))
p + geom_linerange(aes(ymin = lower, ymax = upper))
p + geom_linerange(aes(ymin = lower, ymax = upper))
p + geom_pointrange(aes(ymin = lower, ymax = upper))
p + geom_crossbar(aes(ymin = lower, ymax = upper), width = 0.2)
p + geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2)
ggplot(rb, aes(ymin = upper, ymax = upper))
ggplot(rb, aes(ymin = upper, ymax = upper)) + geom_errorbar()
ggplot(rb, aes(ymin = upper, ymax = upper)) + geom_errorbar(player)
ggplot(rb, aes(y = player, xmin = upper, xmax = upper)) + geom_errorbar()
?geom_errorbar
ggplot(rb, aes(y = player, color = tier)) + geom_errorbar(aes(y = player, xmin = upper, xmax = upper))
ggplot(rb, aes(y = player,x= points, color = tier)) + geom_errorbar(aes(y = player, xmin = upper, xmax = upper))
ggplot(rb, aes(y = player,x= points, color = tier)) + geom_errorbar(aes(ymin = upper, ymax = upper))
ggplot(rb, aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = upper, ymax = upper))
ggplot(rb, aes(y = points, x = player, color = tier)) + geom_linerange(aes(ymin = upper, ymax = upper))
ggplot(rb, aes(y = points, x = player, color = tier)) + geom_linerange()
ggplot(rb, aes(y = points, x = player, color = tier)) + geom_boxplot()
ggplot(rb, aes(y = player, x = points, color = tier)) + geom_boxplot()
View(rb)
ggplot(rb[1:40,] aes(y = player, x = points, color = tier)) + geom_boxplot()
ggplot(rb[1:40] aes(y = player, x = points, color = tier)) + geom_boxplot()
ggplot(rb[1:40,], aes(y = player, x = points, color = tier)) + geom_boxplot()
ggplot(rb[1:40,], aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = upper, ymax = upper))
ggplot(rb[1:40,], aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = upper, ymax = upper)) + coord_flip()
ggplot(rb[1:40,], aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip()
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip()
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2018-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2018-0.csv", stringsAsFactors = FALSE)
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
K <- filter(custom, position == "K")
k <- K
rm(K)
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip()
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip()
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_x_discrete()
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_y_discrete()
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_brewer()
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_fill_discrete()
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = tier)) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()
class(rb$tier)
ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()
rbPlot <- ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()
wrPlot <- ggplot(wr[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()
qbPlot <- ggplot(qb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()  + scale_colour_brewer()
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_brewer()
tePlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_c()
tePlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d()
tePlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_bw()
tePlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_classic()
ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_classic()
ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_gray()
ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_linedraw()
ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_update()
ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_set()
ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_colour_viridis_d() + theme_light()
?geom_errorbar
rbPlot <- ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light()+ guides(color=guide_legend(title=""))
wrPlot <- ggplot(wr[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light()+ guides(color=guide_legend(title=""))
qbPlot <- ggplot(qb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()+ theme_light()+ guides(color=guide_legend(title=""))
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light() + guides(color=guide_legend(title=""))
rbPlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete(palette = "Set1") + theme_light() + guides(color=guide_legend(title=""))
tePlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_brewer(palette = "Set1") + theme_light() + guides(color=guide_legend(title=""))
tePlot
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_brewer(palette = "Set2") + theme_light() + guides(color=guide_legend(title=""))
tePlot
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2018-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2018-0.csv", stringsAsFactors = FALSE)
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
rbPlot <- ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light()+ guides(color=guide_legend(title=""))
wrPlot <- ggplot(wr[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light()+ guides(color=guide_legend(title=""))
qbPlot <- ggplot(qb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()+ theme_light()+ guides(color=guide_legend(title=""))
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light() + guides(color=guide_legend(title=""))
library(ggplot2)
library(dplyr)
raw <- read.csv("/home/michael/Downloads/ffa_rawprojections2018-0.csv", stringsAsFactors = FALSE)
custom <- read.csv("/home/michael/Downloads/ffa_customrankings2018-0.csv", stringsAsFactors = FALSE)
fac <- with(custom, reorder(player, points, max, order = TRUE))
custom$player <- factor(custom$player, levels = levels(fac))
rb <- filter(custom, position == "RB")
wr <- filter(custom, position == "WR")
te <- filter(custom, position == "TE")
qb <- filter(custom, position == "QB")
dst <- filter(custom, position == "DST")
k <- filter(custom, position == "K")
rbPlot <- ggplot(rb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light()+ guides(color=guide_legend(title=""))
wrPlot <- ggplot(wr[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light()+ guides(color=guide_legend(title=""))
qbPlot <- ggplot(qb[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete()+ theme_light()+ guides(color=guide_legend(title=""))
tePlot <- ggplot(te[1:40,] %>% arrange(points), aes(y = points, x = player, color = as.factor(tier))) + geom_errorbar(aes(ymin = lower, ymax = upper)) + coord_flip() + scale_color_discrete() + theme_light() + guides(color=guide_legend(title=""))
View(te)
wrPlot
rbPlot
tePlot
wePlot
wrPlot
rbPlot
wrPlot
View(wr)
rbPlot
qbPlot
View(wr)
View(k)
View(k)
View(dst)
url <- "https://www.sports-reference.com/cfb/schools/wisconsin/"
rushingTable <- '#rushing_and_receiving'
playerID <- paste0(rushingTable,' a')
rushingData <- data.frame()
year <- 1956
library(rvest)
html <- paste0(url,year,".html")
# batting stats
read_html(html) %>%
html_nodes(rushingTable) %>%
html_table(header = T) %>%
data.frame() %>%
tbl_df() -> df
# player info
read_html(html) %>%
html_nodes(playerID) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerID
library(dplyr)
html <- paste0(url,year,".html")
# batting stats
read_html(html) %>%
html_nodes(rushingTable) %>%
html_table(header = T) %>%
data.frame() %>%
tbl_df() -> df
# player info
read_html(html) %>%
html_nodes(playerID) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerID
View(df)
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table() -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerID) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerID
View(df)
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = FALSE) -> df
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table() -> df
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()')
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable)
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerID)
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html()
playerID
rushingTable <- '#rushing_and_receiving'
playerID <- paste0(rushingTable,' a')
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerID) %>%
html_attr(name="href") %>% unlist %>% as.character -> min_playerid
rm(year)
season <- 1956
rm(list=ls())
season <- 1956
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerID,fixed = TRUE)
df$playerID <- c(playerID)
url <- "https://www.sports-reference.com/cfb/schools/wisconsin/"
rushingTable <- '#rushing_and_receiving'
playerIDTable <- paste0(rushingTable,' a')
rushingData <- data.frame()
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
df <- df[1:nrow(df),]
df <- df[!na.omit(df$Rk=='Rk'),]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerID,fixed = TRUE)
df$playerID <- c(playerID)
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
html <- paste0(url,season,".html")
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerID,fixed = TRUE)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerIDhtml,fixed = TRUE)
df$playerID <- c(playerID)
colnames(df) <- df[1,]
df <- df[-1, ]
for (season in 1956:1957) {
html <- paste0(url,season,".html")
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
colnames(df) <- df[1,]
df <- df[-1, ]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerIDhtml,fixed = TRUE)
df$playerID <- c(playerID)
# bind to
rushingData <- rbind(rushingData,df)
}
View(rushingData)
url <- "https://www.sports-reference.com/cfb/schools/wisconsin/"
rushingTable <- '#rushing_and_receiving'
playerIDTable <- paste0(rushingTable,' a')
rushingData <- data.frame()
# for loop by season
for (season in 1956:1999) {
html <- paste0(url,season,".html")
# batting stats
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_node(rushingTable) %>%
html_table(header = TRUE) -> df
# player info
html %>%
read_html %>%
html_nodes(xpath = '//comment()') %>%
html_text() %>%
paste(collapse='') %>%
read_html() %>%
html_nodes(playerIDTable) %>%
html_attr(name="href") %>% unlist %>% as.character -> playerIDhtml
# clean dataframe and add team and season info
colnames(df) <- df[1,]
df <- df[-1, ]
df$season <- c(season)
# remove url data
playerIDhtml=gsub("/cfb/players/", "", playerIDhtml,fixed = TRUE)
playerID=gsub(".html", "", playerIDhtml,fixed = TRUE)
df$playerID <- c(playerID)
# bind to
rushingData <- rbind(rushingData,df)
}
View(rushingData)
devtools::install_github('rstudio/rmarkdown#1303')
install.packages("curl")
devtools::install_github('rstudio/rmarkdown#1303')
devtools::install_github('rstudio/rmarkdown#1303')
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
setwd('/home/michael/Documents/mikeleeco.github.com/')
library(blogdown)
# file.create('.nojekyll')
# blogdown::build_site()
# blogdown::hugo_build()
# serve_site should build the site without errors and display it in the viewer. It's now ready to be pushed to master on github
blogdown::serve_site()
